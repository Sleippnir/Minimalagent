{
  "version": 3,
  "sources": ["../../events/events.js", "../../uuid/dist/esm-browser/regex.js", "../../uuid/dist/esm-browser/validate.js", "../../uuid/dist/esm-browser/parse.js", "../../uuid/dist/esm-browser/stringify.js", "../../uuid/dist/esm-browser/rng.js", "../../uuid/dist/esm-browser/v35.js", "../../uuid/dist/esm-browser/md5.js", "../../uuid/dist/esm-browser/v3.js", "../../uuid/dist/esm-browser/native.js", "../../uuid/dist/esm-browser/v4.js", "../../uuid/dist/esm-browser/sha1.js", "../../uuid/dist/esm-browser/v5.js", "../../bowser/src/constants.js", "../../bowser/src/utils.js", "../../bowser/src/parser-browsers.js", "../../bowser/src/parser-os.js", "../../bowser/src/parser-platforms.js", "../../bowser/src/parser-engines.js", "../../bowser/src/parser.js", "../../bowser/src/bowser.js", "../../@pipecat-ai/client-js/dist/client-js/index.ts", "../../@pipecat-ai/client-js/dist/client-js/client/index.ts", "../../@pipecat-ai/client-js/dist/client-js/client/client.ts", "../../@pipecat-ai/client-js/dist/client-js/package.json", "../../@pipecat-ai/client-js/dist/client-js/rtvi/index.ts", "../../@pipecat-ai/client-js/dist/client-js/rtvi/common_types.ts", "../../@pipecat-ai/client-js/dist/client-js/rtvi/errors.ts", "../../@pipecat-ai/client-js/dist/client-js/rtvi/events.ts", "../../@pipecat-ai/client-js/dist/client-js/rtvi/messages.ts", "../../@pipecat-ai/client-js/dist/client-js/client/decorators.ts", "../../@pipecat-ai/client-js/dist/client-js/client/dispatcher.ts", "../../@pipecat-ai/client-js/dist/client-js/client/logger.ts", "../../@pipecat-ai/client-js/dist/client-js/client/rest_helpers.ts", "../../@pipecat-ai/client-js/dist/client-js/client/transport.ts", "../../@pipecat-ai/client-js/dist/client-js/client/utils.ts"],
  "sourcesContent": ["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;", "import REGEX from './regex.js';\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;", "import validate from './validate.js';\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n  var v;\n  var arr = new Uint8Array(16);\n\n  // Parse ########-....-....-....-............\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff;\n\n  // Parse ........-####-....-....-............\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff;\n\n  // Parse ........-....-####-....-............\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff;\n\n  // Parse ........-....-....-####-............\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff;\n\n  // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\nexport default parse;", "import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}", "import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n  return bytes;\n}\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    }\n\n    // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n    if (buf) {\n      offset = offset || 0;\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n      return buf;\n    }\n    return unsafeStringify(bytes);\n  }\n\n  // Function#name is not settable on some platforms (#270)\n  try {\n    generateUUID.name = name;\n  } catch (err) {}\n\n  // For CommonJS default export support\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n\n/*\n * Convert an array of little-endian words to an array of bytes\n */\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n  return output;\n}\n\n/**\n * Calculate output length with padding and bit length\n */\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n  return [a, b, c, d];\n}\n\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n  return output;\n}\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;", "var randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n    case 1:\n      return x ^ y ^ z;\n    case 2:\n      return x & y ^ x & z ^ y & z;\n    case 3:\n      return x ^ y ^ z;\n  }\n}\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n    M[_i] = arr;\n  }\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;", "// NOTE: this list must be up-to-date with browsers listed in\n// test/acceptance/useragentstrings.yml\nexport const BROWSER_ALIASES_MAP = {\n  'Amazon Silk': 'amazon_silk',\n  'Android Browser': 'android',\n  Bada: 'bada',\n  BlackBerry: 'blackberry',\n  Chrome: 'chrome',\n  Chromium: 'chromium',\n  Electron: 'electron',\n  Epiphany: 'epiphany',\n  Firefox: 'firefox',\n  Focus: 'focus',\n  Generic: 'generic',\n  'Google Search': 'google_search',\n  Googlebot: 'googlebot',\n  'Internet Explorer': 'ie',\n  'K-Meleon': 'k_meleon',\n  Maxthon: 'maxthon',\n  'Microsoft Edge': 'edge',\n  'MZ Browser': 'mz',\n  'NAVER Whale Browser': 'naver',\n  Opera: 'opera',\n  'Opera Coast': 'opera_coast',\n  'Pale Moon': 'pale_moon',\n  PhantomJS: 'phantomjs',\n  Puffin: 'puffin',\n  QupZilla: 'qupzilla',\n  QQ: 'qq',\n  QQLite: 'qqlite',\n  Safari: 'safari',\n  Sailfish: 'sailfish',\n  'Samsung Internet for Android': 'samsung_internet',\n  SeaMonkey: 'seamonkey',\n  Sleipnir: 'sleipnir',\n  Swing: 'swing',\n  Tizen: 'tizen',\n  'UC Browser': 'uc',\n  Vivaldi: 'vivaldi',\n  'WebOS Browser': 'webos',\n  WeChat: 'wechat',\n  'Yandex Browser': 'yandex',\n  Roku: 'roku',\n};\n\nexport const BROWSER_MAP = {\n  amazon_silk: 'Amazon Silk',\n  android: 'Android Browser',\n  bada: 'Bada',\n  blackberry: 'BlackBerry',\n  chrome: 'Chrome',\n  chromium: 'Chromium',\n  electron: 'Electron',\n  epiphany: 'Epiphany',\n  firefox: 'Firefox',\n  focus: 'Focus',\n  generic: 'Generic',\n  googlebot: 'Googlebot',\n  google_search: 'Google Search',\n  ie: 'Internet Explorer',\n  k_meleon: 'K-Meleon',\n  maxthon: 'Maxthon',\n  edge: 'Microsoft Edge',\n  mz: 'MZ Browser',\n  naver: 'NAVER Whale Browser',\n  opera: 'Opera',\n  opera_coast: 'Opera Coast',\n  pale_moon: 'Pale Moon',\n  phantomjs: 'PhantomJS',\n  puffin: 'Puffin',\n  qupzilla: 'QupZilla',\n  qq: 'QQ Browser',\n  qqlite: 'QQ Browser Lite',\n  safari: 'Safari',\n  sailfish: 'Sailfish',\n  samsung_internet: 'Samsung Internet for Android',\n  seamonkey: 'SeaMonkey',\n  sleipnir: 'Sleipnir',\n  swing: 'Swing',\n  tizen: 'Tizen',\n  uc: 'UC Browser',\n  vivaldi: 'Vivaldi',\n  webos: 'WebOS Browser',\n  wechat: 'WeChat',\n  yandex: 'Yandex Browser',\n};\n\nexport const PLATFORMS_MAP = {\n  tablet: 'tablet',\n  mobile: 'mobile',\n  desktop: 'desktop',\n  tv: 'tv',\n  bot: 'bot',\n};\n\nexport const OS_MAP = {\n  WindowsPhone: 'Windows Phone',\n  Windows: 'Windows',\n  MacOS: 'macOS',\n  iOS: 'iOS',\n  Android: 'Android',\n  WebOS: 'WebOS',\n  BlackBerry: 'BlackBerry',\n  Bada: 'Bada',\n  Tizen: 'Tizen',\n  Linux: 'Linux',\n  ChromeOS: 'Chrome OS',\n  PlayStation4: 'PlayStation 4',\n  Roku: 'Roku',\n};\n\nexport const ENGINE_MAP = {\n  EdgeHTML: 'EdgeHTML',\n  Blink: 'Blink',\n  Trident: 'Trident',\n  Presto: 'Presto',\n  Gecko: 'Gecko',\n  WebKit: 'WebKit',\n};\n", "import { BROWSER_MAP, BROWSER_ALIASES_MAP } from './constants.js';\n\nexport default class Utils {\n  /**\n   * Get first matched item for a string\n   * @param {RegExp} regexp\n   * @param {String} ua\n   * @return {Array|{index: number, input: string}|*|boolean|string}\n   */\n  static getFirstMatch(regexp, ua) {\n    const match = ua.match(regexp);\n    return (match && match.length > 0 && match[1]) || '';\n  }\n\n  /**\n   * Get second matched item for a string\n   * @param regexp\n   * @param {String} ua\n   * @return {Array|{index: number, input: string}|*|boolean|string}\n   */\n  static getSecondMatch(regexp, ua) {\n    const match = ua.match(regexp);\n    return (match && match.length > 1 && match[2]) || '';\n  }\n\n  /**\n   * Match a regexp and return a constant or undefined\n   * @param {RegExp} regexp\n   * @param {String} ua\n   * @param {*} _const Any const that will be returned if regexp matches the string\n   * @return {*}\n   */\n  static matchAndReturnConst(regexp, ua, _const) {\n    if (regexp.test(ua)) {\n      return _const;\n    }\n    return void (0);\n  }\n\n  static getWindowsVersionName(version) {\n    switch (version) {\n      case 'NT': return 'NT';\n      case 'XP': return 'XP';\n      case 'NT 5.0': return '2000';\n      case 'NT 5.1': return 'XP';\n      case 'NT 5.2': return '2003';\n      case 'NT 6.0': return 'Vista';\n      case 'NT 6.1': return '7';\n      case 'NT 6.2': return '8';\n      case 'NT 6.3': return '8.1';\n      case 'NT 10.0': return '10';\n      default: return undefined;\n    }\n  }\n\n  /**\n   * Get macOS version name\n   *    10.5 - Leopard\n   *    10.6 - Snow Leopard\n   *    10.7 - Lion\n   *    10.8 - Mountain Lion\n   *    10.9 - Mavericks\n   *    10.10 - Yosemite\n   *    10.11 - El Capitan\n   *    10.12 - Sierra\n   *    10.13 - High Sierra\n   *    10.14 - Mojave\n   *    10.15 - Catalina\n   *\n   * @example\n   *   getMacOSVersionName(\"10.14\") // 'Mojave'\n   *\n   * @param  {string} version\n   * @return {string} versionName\n   */\n  static getMacOSVersionName(version) {\n    const v = version.split('.').splice(0, 2).map(s => parseInt(s, 10) || 0);\n    v.push(0);\n    if (v[0] !== 10) return undefined;\n    switch (v[1]) {\n      case 5: return 'Leopard';\n      case 6: return 'Snow Leopard';\n      case 7: return 'Lion';\n      case 8: return 'Mountain Lion';\n      case 9: return 'Mavericks';\n      case 10: return 'Yosemite';\n      case 11: return 'El Capitan';\n      case 12: return 'Sierra';\n      case 13: return 'High Sierra';\n      case 14: return 'Mojave';\n      case 15: return 'Catalina';\n      default: return undefined;\n    }\n  }\n\n  /**\n   * Get Android version name\n   *    1.5 - Cupcake\n   *    1.6 - Donut\n   *    2.0 - Eclair\n   *    2.1 - Eclair\n   *    2.2 - Froyo\n   *    2.x - Gingerbread\n   *    3.x - Honeycomb\n   *    4.0 - Ice Cream Sandwich\n   *    4.1 - Jelly Bean\n   *    4.4 - KitKat\n   *    5.x - Lollipop\n   *    6.x - Marshmallow\n   *    7.x - Nougat\n   *    8.x - Oreo\n   *    9.x - Pie\n   *\n   * @example\n   *   getAndroidVersionName(\"7.0\") // 'Nougat'\n   *\n   * @param  {string} version\n   * @return {string} versionName\n   */\n  static getAndroidVersionName(version) {\n    const v = version.split('.').splice(0, 2).map(s => parseInt(s, 10) || 0);\n    v.push(0);\n    if (v[0] === 1 && v[1] < 5) return undefined;\n    if (v[0] === 1 && v[1] < 6) return 'Cupcake';\n    if (v[0] === 1 && v[1] >= 6) return 'Donut';\n    if (v[0] === 2 && v[1] < 2) return 'Eclair';\n    if (v[0] === 2 && v[1] === 2) return 'Froyo';\n    if (v[0] === 2 && v[1] > 2) return 'Gingerbread';\n    if (v[0] === 3) return 'Honeycomb';\n    if (v[0] === 4 && v[1] < 1) return 'Ice Cream Sandwich';\n    if (v[0] === 4 && v[1] < 4) return 'Jelly Bean';\n    if (v[0] === 4 && v[1] >= 4) return 'KitKat';\n    if (v[0] === 5) return 'Lollipop';\n    if (v[0] === 6) return 'Marshmallow';\n    if (v[0] === 7) return 'Nougat';\n    if (v[0] === 8) return 'Oreo';\n    if (v[0] === 9) return 'Pie';\n    return undefined;\n  }\n\n  /**\n   * Get version precisions count\n   *\n   * @example\n   *   getVersionPrecision(\"1.10.3\") // 3\n   *\n   * @param  {string} version\n   * @return {number}\n   */\n  static getVersionPrecision(version) {\n    return version.split('.').length;\n  }\n\n  /**\n   * Calculate browser version weight\n   *\n   * @example\n   *   compareVersions('1.10.2.1',  '1.8.2.1.90')    // 1\n   *   compareVersions('1.010.2.1', '1.09.2.1.90');  // 1\n   *   compareVersions('1.10.2.1',  '1.10.2.1');     // 0\n   *   compareVersions('1.10.2.1',  '1.0800.2');     // -1\n   *   compareVersions('1.10.2.1',  '1.10',  true);  // 0\n   *\n   * @param {String} versionA versions versions to compare\n   * @param {String} versionB versions versions to compare\n   * @param {boolean} [isLoose] enable loose comparison\n   * @return {Number} comparison result: -1 when versionA is lower,\n   * 1 when versionA is bigger, 0 when both equal\n   */\n  /* eslint consistent-return: 1 */\n  static compareVersions(versionA, versionB, isLoose = false) {\n    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\n    const versionAPrecision = Utils.getVersionPrecision(versionA);\n    const versionBPrecision = Utils.getVersionPrecision(versionB);\n\n    let precision = Math.max(versionAPrecision, versionBPrecision);\n    let lastPrecision = 0;\n\n    const chunks = Utils.map([versionA, versionB], (version) => {\n      const delta = precision - Utils.getVersionPrecision(version);\n\n      // 2) \"9\" -> \"9.0\" (for precision = 2)\n      const _version = version + new Array(delta + 1).join('.0');\n\n      // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\n      return Utils.map(_version.split('.'), chunk => new Array(20 - chunk.length).join('0') + chunk).reverse();\n    });\n\n    // adjust precision for loose comparison\n    if (isLoose) {\n      lastPrecision = precision - Math.min(versionAPrecision, versionBPrecision);\n    }\n\n    // iterate in reverse order by reversed chunks array\n    precision -= 1;\n    while (precision >= lastPrecision) {\n      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\n      if (chunks[0][precision] > chunks[1][precision]) {\n        return 1;\n      }\n\n      if (chunks[0][precision] === chunks[1][precision]) {\n        if (precision === lastPrecision) {\n          // all version chunks are same\n          return 0;\n        }\n\n        precision -= 1;\n      } else if (chunks[0][precision] < chunks[1][precision]) {\n        return -1;\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Array::map polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} iterator\n   * @return {Array}\n   */\n  static map(arr, iterator) {\n    const result = [];\n    let i;\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, iterator);\n    }\n    for (i = 0; i < arr.length; i += 1) {\n      result.push(iterator(arr[i]));\n    }\n    return result;\n  }\n\n  /**\n   * Array::find polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} predicate\n   * @return {Array}\n   */\n  static find(arr, predicate) {\n    let i;\n    let l;\n    if (Array.prototype.find) {\n      return Array.prototype.find.call(arr, predicate);\n    }\n    for (i = 0, l = arr.length; i < l; i += 1) {\n      const value = arr[i];\n      if (predicate(value, i)) {\n        return value;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Object::assign polyfill\n   *\n   * @param  {Object} obj\n   * @param  {Object} ...objs\n   * @return {Object}\n   */\n  static assign(obj, ...assigners) {\n    const result = obj;\n    let i;\n    let l;\n    if (Object.assign) {\n      return Object.assign(obj, ...assigners);\n    }\n    for (i = 0, l = assigners.length; i < l; i += 1) {\n      const assigner = assigners[i];\n      if (typeof assigner === 'object' && assigner !== null) {\n        const keys = Object.keys(assigner);\n        keys.forEach((key) => {\n          result[key] = assigner[key];\n        });\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Get short version/alias for a browser name\n   *\n   * @example\n   *   getBrowserAlias('Microsoft Edge') // edge\n   *\n   * @param  {string} browserName\n   * @return {string}\n   */\n  static getBrowserAlias(browserName) {\n    return BROWSER_ALIASES_MAP[browserName];\n  }\n\n  /**\n   * Get browser name for a short version/alias\n   *\n   * @example\n   *   getBrowserTypeByAlias('edge') // Microsoft Edge\n   *\n   * @param  {string} browserAlias\n   * @return {string}\n   */\n  static getBrowserTypeByAlias(browserAlias) {\n    return BROWSER_MAP[browserAlias] || '';\n  }\n}\n", "/**\n * Browsers' descriptors\n *\n * The idea of descriptors is simple. You should know about them two simple things:\n * 1. Every descriptor has a method or property called `test` and a `describe` method.\n * 2. Order of descriptors is important.\n *\n * More details:\n * 1. Method or property `test` serves as a way to detect whether the UA string\n * matches some certain browser or not. The `describe` method helps to make a result\n * object with params that show some browser-specific things: name, version, etc.\n * 2. Order of descriptors is important because a Parser goes through them one by one\n * in course. For example, if you insert Chrome's descriptor as the first one,\n * more then a half of browsers will be described as Chrome, because they will pass\n * the Chrome descriptor's test.\n *\n * Descriptor's `test` could be a property with an array of RegExps, where every RegExp\n * will be applied to a UA string to test it whether it matches or not.\n * If a descriptor has two or more regexps in the `test` array it tests them one by one\n * with a logical sum operation. Parser stops if it has found any RegExp that matches the UA.\n *\n * Or `test` could be a method. In that case it gets a Parser instance and should\n * return true/false to get the Parser know if this browser descriptor matches the UA or not.\n */\n\nimport Utils from './utils.js';\n\nconst commonVersionIdentifier = /version\\/(\\d+(\\.?_?\\d+)+)/i;\n\nconst browsersList = [\n  /* Googlebot */\n  {\n    test: [/googlebot/i],\n    describe(ua) {\n      const browser = {\n        name: 'Googlebot',\n      };\n      const version = Utils.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Opera < 13.0 */\n  {\n    test: [/opera/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Opera > 13.0 */\n  {\n    test: [/opr\\/|opios/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera',\n      };\n      const version = Utils.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/SamsungBrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'Samsung Internet for Android',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/Whale/i],\n    describe(ua) {\n      const browser = {\n        name: 'NAVER Whale Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/PaleMoon/i],\n    describe(ua) {\n      const browser = {\n        name: 'Pale Moon',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:PaleMoon)[\\s/](\\d+(?:\\.\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/MZBrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'MZ Browser',\n      };\n      const version = Utils.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/focus/i],\n    describe(ua) {\n      const browser = {\n        name: 'Focus',\n      };\n      const version = Utils.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/swing/i],\n    describe(ua) {\n      const browser = {\n        name: 'Swing',\n      };\n      const version = Utils.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/coast/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera Coast',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/opt\\/\\d+(?:.?_?\\d+)+/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera Touch',\n      };\n      const version = Utils.getFirstMatch(/(?:opt)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/yabrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'Yandex Browser',\n      };\n      const version = Utils.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/ucbrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'UC Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/Maxthon|mxios/i],\n    describe(ua) {\n      const browser = {\n        name: 'Maxthon',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/epiphany/i],\n    describe(ua) {\n      const browser = {\n        name: 'Epiphany',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/puffin/i],\n    describe(ua) {\n      const browser = {\n        name: 'Puffin',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/sleipnir/i],\n    describe(ua) {\n      const browser = {\n        name: 'Sleipnir',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/k-meleon/i],\n    describe(ua) {\n      const browser = {\n        name: 'K-Meleon',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/micromessenger/i],\n    describe(ua) {\n      const browser = {\n        name: 'WeChat',\n      };\n      const version = Utils.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/qqbrowser/i],\n    describe(ua) {\n      const browser = {\n        name: (/qqbrowserlite/i).test(ua) ? 'QQ Browser Lite' : 'QQ Browser',\n      };\n      const version = Utils.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/msie|trident/i],\n    describe(ua) {\n      const browser = {\n        name: 'Internet Explorer',\n      };\n      const version = Utils.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/\\sedg\\//i],\n    describe(ua) {\n      const browser = {\n        name: 'Microsoft Edge',\n      };\n\n      const version = Utils.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/edg([ea]|ios)/i],\n    describe(ua) {\n      const browser = {\n        name: 'Microsoft Edge',\n      };\n\n      const version = Utils.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/vivaldi/i],\n    describe(ua) {\n      const browser = {\n        name: 'Vivaldi',\n      };\n      const version = Utils.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/seamonkey/i],\n    describe(ua) {\n      const browser = {\n        name: 'SeaMonkey',\n      };\n      const version = Utils.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/sailfish/i],\n    describe(ua) {\n      const browser = {\n        name: 'Sailfish',\n      };\n\n      const version = Utils.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/silk/i],\n    describe(ua) {\n      const browser = {\n        name: 'Amazon Silk',\n      };\n      const version = Utils.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/phantom/i],\n    describe(ua) {\n      const browser = {\n        name: 'PhantomJS',\n      };\n      const version = Utils.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/slimerjs/i],\n    describe(ua) {\n      const browser = {\n        name: 'SlimerJS',\n      };\n      const version = Utils.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/blackberry|\\bbb\\d+/i, /rim\\stablet/i],\n    describe(ua) {\n      const browser = {\n        name: 'BlackBerry',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/(web|hpw)[o0]s/i],\n    describe(ua) {\n      const browser = {\n        name: 'WebOS Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/bada/i],\n    describe(ua) {\n      const browser = {\n        name: 'Bada',\n      };\n      const version = Utils.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/tizen/i],\n    describe(ua) {\n      const browser = {\n        name: 'Tizen',\n      };\n      const version = Utils.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/qupzilla/i],\n    describe(ua) {\n      const browser = {\n        name: 'QupZilla',\n      };\n      const version = Utils.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/firefox|iceweasel|fxios/i],\n    describe(ua) {\n      const browser = {\n        name: 'Firefox',\n      };\n      const version = Utils.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/electron/i],\n    describe(ua) {\n      const browser = {\n        name: 'Electron',\n      };\n      const version = Utils.getFirstMatch(/(?:electron)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/MiuiBrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'Miui',\n      };\n      const version = Utils.getFirstMatch(/(?:MiuiBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/chromium/i],\n    describe(ua) {\n      const browser = {\n        name: 'Chromium',\n      };\n      const version = Utils.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/chrome|crios|crmo/i],\n    describe(ua) {\n      const browser = {\n        name: 'Chrome',\n      };\n      const version = Utils.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/GSA/i],\n    describe(ua) {\n      const browser = {\n        name: 'Google Search',\n      };\n      const version = Utils.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Android Browser */\n  {\n    test(parser) {\n      const notLikeAndroid = !parser.test(/like android/i);\n      const butAndroid = parser.test(/android/i);\n      return notLikeAndroid && butAndroid;\n    },\n    describe(ua) {\n      const browser = {\n        name: 'Android Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* PlayStation 4 */\n  {\n    test: [/playstation 4/i],\n    describe(ua) {\n      const browser = {\n        name: 'PlayStation 4',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Safari */\n  {\n    test: [/safari|applewebkit/i],\n    describe(ua) {\n      const browser = {\n        name: 'Safari',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Something else */\n  {\n    test: [/.*/i],\n    describe(ua) {\n      /* Here we try to make sure that there are explicit details about the device\n       * in order to decide what regexp exactly we want to apply\n       * (as there is a specific decision based on that conclusion)\n       */\n      const regexpWithoutDeviceSpec = /^(.*)\\/(.*) /;\n      const regexpWithDeviceSpec = /^(.*)\\/(.*)[ \\t]\\((.*)/;\n      const hasDeviceSpec = ua.search('\\\\(') !== -1;\n      const regexp = hasDeviceSpec ? regexpWithDeviceSpec : regexpWithoutDeviceSpec;\n      return {\n        name: Utils.getFirstMatch(regexp, ua),\n        version: Utils.getSecondMatch(regexp, ua),\n      };\n    },\n  },\n];\n\nexport default browsersList;\n", "import Utils from './utils.js';\nimport { OS_MAP } from './constants.js';\n\nexport default [\n  /* Roku */\n  {\n    test: [/Roku\\/DVP/],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i, ua);\n      return {\n        name: OS_MAP.Roku,\n        version,\n      };\n    },\n  },\n\n  /* Windows Phone */\n  {\n    test: [/windows phone/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i, ua);\n      return {\n        name: OS_MAP.WindowsPhone,\n        version,\n      };\n    },\n  },\n\n  /* Windows */\n  {\n    test: [/windows /i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i, ua);\n      const versionName = Utils.getWindowsVersionName(version);\n\n      return {\n        name: OS_MAP.Windows,\n        version,\n        versionName,\n      };\n    },\n  },\n\n  /* Firefox on iPad */\n  {\n    test: [/Macintosh(.*?) FxiOS(.*?)\\//],\n    describe(ua) {\n      const result = {\n        name: OS_MAP.iOS,\n      };\n      const version = Utils.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/, ua);\n      if (version) {\n        result.version = version;\n      }\n      return result;\n    },\n  },\n\n  /* macOS */\n  {\n    test: [/macintosh/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i, ua).replace(/[_\\s]/g, '.');\n      const versionName = Utils.getMacOSVersionName(version);\n\n      const os = {\n        name: OS_MAP.MacOS,\n        version,\n      };\n      if (versionName) {\n        os.versionName = versionName;\n      }\n      return os;\n    },\n  },\n\n  /* iOS */\n  {\n    test: [/(ipod|iphone|ipad)/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i, ua).replace(/[_\\s]/g, '.');\n\n      return {\n        name: OS_MAP.iOS,\n        version,\n      };\n    },\n  },\n\n  /* Android */\n  {\n    test(parser) {\n      const notLikeAndroid = !parser.test(/like android/i);\n      const butAndroid = parser.test(/android/i);\n      return notLikeAndroid && butAndroid;\n    },\n    describe(ua) {\n      const version = Utils.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i, ua);\n      const versionName = Utils.getAndroidVersionName(version);\n      const os = {\n        name: OS_MAP.Android,\n        version,\n      };\n      if (versionName) {\n        os.versionName = versionName;\n      }\n      return os;\n    },\n  },\n\n  /* WebOS */\n  {\n    test: [/(web|hpw)[o0]s/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i, ua);\n      const os = {\n        name: OS_MAP.WebOS,\n      };\n\n      if (version && version.length) {\n        os.version = version;\n      }\n      return os;\n    },\n  },\n\n  /* BlackBerry */\n  {\n    test: [/blackberry|\\bbb\\d+/i, /rim\\stablet/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i, ua)\n        || Utils.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i, ua)\n        || Utils.getFirstMatch(/\\bbb(\\d+)/i, ua);\n\n      return {\n        name: OS_MAP.BlackBerry,\n        version,\n      };\n    },\n  },\n\n  /* Bada */\n  {\n    test: [/bada/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i, ua);\n\n      return {\n        name: OS_MAP.Bada,\n        version,\n      };\n    },\n  },\n\n  /* Tizen */\n  {\n    test: [/tizen/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i, ua);\n\n      return {\n        name: OS_MAP.Tizen,\n        version,\n      };\n    },\n  },\n\n  /* Linux */\n  {\n    test: [/linux/i],\n    describe() {\n      return {\n        name: OS_MAP.Linux,\n      };\n    },\n  },\n\n  /* Chrome OS */\n  {\n    test: [/CrOS/],\n    describe() {\n      return {\n        name: OS_MAP.ChromeOS,\n      };\n    },\n  },\n\n  /* Playstation 4 */\n  {\n    test: [/PlayStation 4/],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i, ua);\n      return {\n        name: OS_MAP.PlayStation4,\n        version,\n      };\n    },\n  },\n];\n", "import Utils from './utils.js';\nimport { PLATFORMS_MAP } from './constants.js';\n\n/*\n * Tablets go first since usually they have more specific\n * signs to detect.\n */\n\nexport default [\n  /* Googlebot */\n  {\n    test: [/googlebot/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.bot,\n        vendor: 'Google',\n      };\n    },\n  },\n\n  /* Huawei */\n  {\n    test: [/huawei/i],\n    describe(ua) {\n      const model = Utils.getFirstMatch(/(can-l01)/i, ua) && 'Nova';\n      const platform = {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Huawei',\n      };\n      if (model) {\n        platform.model = model;\n      }\n      return platform;\n    },\n  },\n\n  /* Nexus Tablet */\n  {\n    test: [/nexus\\s*(?:7|8|9|10).*/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Nexus',\n      };\n    },\n  },\n\n  /* iPad */\n  {\n    test: [/ipad/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Apple',\n        model: 'iPad',\n      };\n    },\n  },\n\n  /* Firefox on iPad */\n  {\n    test: [/Macintosh(.*?) FxiOS(.*?)\\//],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Apple',\n        model: 'iPad',\n      };\n    },\n  },\n\n  /* Amazon Kindle Fire */\n  {\n    test: [/kftt build/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Amazon',\n        model: 'Kindle Fire HD 7',\n      };\n    },\n  },\n\n  /* Another Amazon Tablet with Silk */\n  {\n    test: [/silk/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Amazon',\n      };\n    },\n  },\n\n  /* Tablet */\n  {\n    test: [/tablet(?! pc)/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n      };\n    },\n  },\n\n  /* iPod/iPhone */\n  {\n    test(parser) {\n      const iDevice = parser.test(/ipod|iphone/i);\n      const likeIDevice = parser.test(/like (ipod|iphone)/i);\n      return iDevice && !likeIDevice;\n    },\n    describe(ua) {\n      const model = Utils.getFirstMatch(/(ipod|iphone)/i, ua);\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Apple',\n        model,\n      };\n    },\n  },\n\n  /* Nexus Mobile */\n  {\n    test: [/nexus\\s*[0-6].*/i, /galaxy nexus/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Nexus',\n      };\n    },\n  },\n\n  /* Nokia */\n  {\n    test: [/Nokia/i],\n    describe(ua) {\n      const model = Utils.getFirstMatch(/Nokia\\s+([0-9]+(\\.[0-9]+)?)/i, ua);\n      const platform = {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Nokia',\n      };\n      if (model) {\n        platform.model = model;\n      }\n      return platform;\n    },\n  },\n\n  /* Mobile */\n  {\n    test: [/[^-]mobi/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n      };\n    },\n  },\n\n  /* BlackBerry */\n  {\n    test(parser) {\n      return parser.getBrowserName(true) === 'blackberry';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'BlackBerry',\n      };\n    },\n  },\n\n  /* Bada */\n  {\n    test(parser) {\n      return parser.getBrowserName(true) === 'bada';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n      };\n    },\n  },\n\n  /* Windows Phone */\n  {\n    test(parser) {\n      return parser.getBrowserName() === 'windows phone';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Microsoft',\n      };\n    },\n  },\n\n  /* Android Tablet */\n  {\n    test(parser) {\n      const osMajorVersion = Number(String(parser.getOSVersion()).split('.')[0]);\n      return parser.getOSName(true) === 'android' && (osMajorVersion >= 3);\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n      };\n    },\n  },\n\n  /* Android Mobile */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'android';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n      };\n    },\n  },\n\n  /* desktop */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'macos';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.desktop,\n        vendor: 'Apple',\n      };\n    },\n  },\n\n  /* Windows */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'windows';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.desktop,\n      };\n    },\n  },\n\n  /* Linux */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'linux';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.desktop,\n      };\n    },\n  },\n\n  /* PlayStation 4 */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'playstation 4';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tv,\n      };\n    },\n  },\n\n  /* Roku */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'roku';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tv,\n      };\n    },\n  },\n];\n", "import Utils from './utils.js';\nimport { ENGINE_MAP } from './constants.js';\n\n/*\n * More specific goes first\n */\nexport default [\n  /* EdgeHTML */\n  {\n    test(parser) {\n      return parser.getBrowserName(true) === 'microsoft edge';\n    },\n    describe(ua) {\n      const isBlinkBased = /\\sedg\\//i.test(ua);\n\n      // return blink if it's blink-based one\n      if (isBlinkBased) {\n        return {\n          name: ENGINE_MAP.Blink,\n        };\n      }\n\n      // otherwise match the version and return EdgeHTML\n      const version = Utils.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      return {\n        name: ENGINE_MAP.EdgeHTML,\n        version,\n      };\n    },\n  },\n\n  /* Trident */\n  {\n    test: [/trident/i],\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Trident,\n      };\n\n      const version = Utils.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Presto */\n  {\n    test(parser) {\n      return parser.test(/presto/i);\n    },\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Presto,\n      };\n\n      const version = Utils.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Gecko */\n  {\n    test(parser) {\n      const isGecko = parser.test(/gecko/i);\n      const likeGecko = parser.test(/like gecko/i);\n      return isGecko && !likeGecko;\n    },\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Gecko,\n      };\n\n      const version = Utils.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Blink */\n  {\n    test: [/(apple)?webkit\\/537\\.36/i],\n    describe() {\n      return {\n        name: ENGINE_MAP.Blink,\n      };\n    },\n  },\n\n  /* WebKit */\n  {\n    test: [/(apple)?webkit/i],\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.WebKit,\n      };\n\n      const version = Utils.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n];\n", "import browserParsersList from './parser-browsers.js';\nimport osParsersList from './parser-os.js';\nimport platformParsersList from './parser-platforms.js';\nimport enginesParsersList from './parser-engines.js';\nimport Utils from './utils.js';\n\n/**\n * The main class that arranges the whole parsing process.\n */\nclass Parser {\n  /**\n   * Create instance of Parser\n   *\n   * @param {String} UA User-Agent string\n   * @param {Boolean} [skipParsing=false] parser can skip parsing in purpose of performance\n   * improvements if you need to make a more particular parsing\n   * like {@link Parser#parseBrowser} or {@link Parser#parsePlatform}\n   *\n   * @throw {Error} in case of empty UA String\n   *\n   * @constructor\n   */\n  constructor(UA, skipParsing = false) {\n    if (UA === void (0) || UA === null || UA === '') {\n      throw new Error(\"UserAgent parameter can't be empty\");\n    }\n\n    this._ua = UA;\n\n    /**\n     * @typedef ParsedResult\n     * @property {Object} browser\n     * @property {String|undefined} [browser.name]\n     * Browser name, like `\"Chrome\"` or `\"Internet Explorer\"`\n     * @property {String|undefined} [browser.version] Browser version as a String `\"12.01.45334.10\"`\n     * @property {Object} os\n     * @property {String|undefined} [os.name] OS name, like `\"Windows\"` or `\"macOS\"`\n     * @property {String|undefined} [os.version] OS version, like `\"NT 5.1\"` or `\"10.11.1\"`\n     * @property {String|undefined} [os.versionName] OS name, like `\"XP\"` or `\"High Sierra\"`\n     * @property {Object} platform\n     * @property {String|undefined} [platform.type]\n     * platform type, can be either `\"desktop\"`, `\"tablet\"` or `\"mobile\"`\n     * @property {String|undefined} [platform.vendor] Vendor of the device,\n     * like `\"Apple\"` or `\"Samsung\"`\n     * @property {String|undefined} [platform.model] Device model,\n     * like `\"iPhone\"` or `\"Kindle Fire HD 7\"`\n     * @property {Object} engine\n     * @property {String|undefined} [engine.name]\n     * Can be any of this: `WebKit`, `Blink`, `Gecko`, `Trident`, `Presto`, `EdgeHTML`\n     * @property {String|undefined} [engine.version] String version of the engine\n     */\n    this.parsedResult = {};\n\n    if (skipParsing !== true) {\n      this.parse();\n    }\n  }\n\n  /**\n   * Get UserAgent string of current Parser instance\n   * @return {String} User-Agent String of the current <Parser> object\n   *\n   * @public\n   */\n  getUA() {\n    return this._ua;\n  }\n\n  /**\n   * Test a UA string for a regexp\n   * @param {RegExp} regex\n   * @return {Boolean}\n   */\n  test(regex) {\n    return regex.test(this._ua);\n  }\n\n  /**\n   * Get parsed browser object\n   * @return {Object}\n   */\n  parseBrowser() {\n    this.parsedResult.browser = {};\n\n    const browserDescriptor = Utils.find(browserParsersList, (_browser) => {\n      if (typeof _browser.test === 'function') {\n        return _browser.test(this);\n      }\n\n      if (Array.isArray(_browser.test)) {\n        return _browser.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (browserDescriptor) {\n      this.parsedResult.browser = browserDescriptor.describe(this.getUA());\n    }\n\n    return this.parsedResult.browser;\n  }\n\n  /**\n   * Get parsed browser object\n   * @return {Object}\n   *\n   * @public\n   */\n  getBrowser() {\n    if (this.parsedResult.browser) {\n      return this.parsedResult.browser;\n    }\n\n    return this.parseBrowser();\n  }\n\n  /**\n   * Get browser's name\n   * @return {String} Browser's name or an empty string\n   *\n   * @public\n   */\n  getBrowserName(toLowerCase) {\n    if (toLowerCase) {\n      return String(this.getBrowser().name).toLowerCase() || '';\n    }\n    return this.getBrowser().name || '';\n  }\n\n\n  /**\n   * Get browser's version\n   * @return {String} version of browser\n   *\n   * @public\n   */\n  getBrowserVersion() {\n    return this.getBrowser().version;\n  }\n\n  /**\n   * Get OS\n   * @return {Object}\n   *\n   * @example\n   * this.getOS();\n   * {\n   *   name: 'macOS',\n   *   version: '10.11.12'\n   * }\n   */\n  getOS() {\n    if (this.parsedResult.os) {\n      return this.parsedResult.os;\n    }\n\n    return this.parseOS();\n  }\n\n  /**\n   * Parse OS and save it to this.parsedResult.os\n   * @return {*|{}}\n   */\n  parseOS() {\n    this.parsedResult.os = {};\n\n    const os = Utils.find(osParsersList, (_os) => {\n      if (typeof _os.test === 'function') {\n        return _os.test(this);\n      }\n\n      if (Array.isArray(_os.test)) {\n        return _os.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (os) {\n      this.parsedResult.os = os.describe(this.getUA());\n    }\n\n    return this.parsedResult.os;\n  }\n\n  /**\n   * Get OS name\n   * @param {Boolean} [toLowerCase] return lower-cased value\n   * @return {String} name of the OS — macOS, Windows, Linux, etc.\n   */\n  getOSName(toLowerCase) {\n    const { name } = this.getOS();\n\n    if (toLowerCase) {\n      return String(name).toLowerCase() || '';\n    }\n\n    return name || '';\n  }\n\n  /**\n   * Get OS version\n   * @return {String} full version with dots ('10.11.12', '5.6', etc)\n   */\n  getOSVersion() {\n    return this.getOS().version;\n  }\n\n  /**\n   * Get parsed platform\n   * @return {{}}\n   */\n  getPlatform() {\n    if (this.parsedResult.platform) {\n      return this.parsedResult.platform;\n    }\n\n    return this.parsePlatform();\n  }\n\n  /**\n   * Get platform name\n   * @param {Boolean} [toLowerCase=false]\n   * @return {*}\n   */\n  getPlatformType(toLowerCase = false) {\n    const { type } = this.getPlatform();\n\n    if (toLowerCase) {\n      return String(type).toLowerCase() || '';\n    }\n\n    return type || '';\n  }\n\n  /**\n   * Get parsed platform\n   * @return {{}}\n   */\n  parsePlatform() {\n    this.parsedResult.platform = {};\n\n    const platform = Utils.find(platformParsersList, (_platform) => {\n      if (typeof _platform.test === 'function') {\n        return _platform.test(this);\n      }\n\n      if (Array.isArray(_platform.test)) {\n        return _platform.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (platform) {\n      this.parsedResult.platform = platform.describe(this.getUA());\n    }\n\n    return this.parsedResult.platform;\n  }\n\n  /**\n   * Get parsed engine\n   * @return {{}}\n   */\n  getEngine() {\n    if (this.parsedResult.engine) {\n      return this.parsedResult.engine;\n    }\n\n    return this.parseEngine();\n  }\n\n  /**\n   * Get engines's name\n   * @return {String} Engines's name or an empty string\n   *\n   * @public\n   */\n  getEngineName(toLowerCase) {\n    if (toLowerCase) {\n      return String(this.getEngine().name).toLowerCase() || '';\n    }\n    return this.getEngine().name || '';\n  }\n\n  /**\n   * Get parsed platform\n   * @return {{}}\n   */\n  parseEngine() {\n    this.parsedResult.engine = {};\n\n    const engine = Utils.find(enginesParsersList, (_engine) => {\n      if (typeof _engine.test === 'function') {\n        return _engine.test(this);\n      }\n\n      if (Array.isArray(_engine.test)) {\n        return _engine.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (engine) {\n      this.parsedResult.engine = engine.describe(this.getUA());\n    }\n\n    return this.parsedResult.engine;\n  }\n\n  /**\n   * Parse full information about the browser\n   * @returns {Parser}\n   */\n  parse() {\n    this.parseBrowser();\n    this.parseOS();\n    this.parsePlatform();\n    this.parseEngine();\n\n    return this;\n  }\n\n  /**\n   * Get parsed result\n   * @return {ParsedResult}\n   */\n  getResult() {\n    return Utils.assign({}, this.parsedResult);\n  }\n\n  /**\n   * Check if parsed browser matches certain conditions\n   *\n   * @param {Object} checkTree It's one or two layered object,\n   * which can include a platform or an OS on the first layer\n   * and should have browsers specs on the bottom-laying layer\n   *\n   * @returns {Boolean|undefined} Whether the browser satisfies the set conditions or not.\n   * Returns `undefined` when the browser is no described in the checkTree object.\n   *\n   * @example\n   * const browser = Bowser.getParser(window.navigator.userAgent);\n   * if (browser.satisfies({chrome: '>118.01.1322' }))\n   * // or with os\n   * if (browser.satisfies({windows: { chrome: '>118.01.1322' } }))\n   * // or with platforms\n   * if (browser.satisfies({desktop: { chrome: '>118.01.1322' } }))\n   */\n  satisfies(checkTree) {\n    const platformsAndOSes = {};\n    let platformsAndOSCounter = 0;\n    const browsers = {};\n    let browsersCounter = 0;\n\n    const allDefinitions = Object.keys(checkTree);\n\n    allDefinitions.forEach((key) => {\n      const currentDefinition = checkTree[key];\n      if (typeof currentDefinition === 'string') {\n        browsers[key] = currentDefinition;\n        browsersCounter += 1;\n      } else if (typeof currentDefinition === 'object') {\n        platformsAndOSes[key] = currentDefinition;\n        platformsAndOSCounter += 1;\n      }\n    });\n\n    if (platformsAndOSCounter > 0) {\n      const platformsAndOSNames = Object.keys(platformsAndOSes);\n      const OSMatchingDefinition = Utils.find(platformsAndOSNames, name => (this.isOS(name)));\n\n      if (OSMatchingDefinition) {\n        const osResult = this.satisfies(platformsAndOSes[OSMatchingDefinition]);\n\n        if (osResult !== void 0) {\n          return osResult;\n        }\n      }\n\n      const platformMatchingDefinition = Utils.find(\n        platformsAndOSNames,\n        name => (this.isPlatform(name)),\n      );\n      if (platformMatchingDefinition) {\n        const platformResult = this.satisfies(platformsAndOSes[platformMatchingDefinition]);\n\n        if (platformResult !== void 0) {\n          return platformResult;\n        }\n      }\n    }\n\n    if (browsersCounter > 0) {\n      const browserNames = Object.keys(browsers);\n      const matchingDefinition = Utils.find(browserNames, name => (this.isBrowser(name, true)));\n\n      if (matchingDefinition !== void 0) {\n        return this.compareVersion(browsers[matchingDefinition]);\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Check if the browser name equals the passed string\n   * @param {string} browserName The string to compare with the browser name\n   * @param [includingAlias=false] The flag showing whether alias will be included into comparison\n   * @returns {boolean}\n   */\n  isBrowser(browserName, includingAlias = false) {\n    const defaultBrowserName = this.getBrowserName().toLowerCase();\n    let browserNameLower = browserName.toLowerCase();\n    const alias = Utils.getBrowserTypeByAlias(browserNameLower);\n\n    if (includingAlias && alias) {\n      browserNameLower = alias.toLowerCase();\n    }\n    return browserNameLower === defaultBrowserName;\n  }\n\n  compareVersion(version) {\n    let expectedResults = [0];\n    let comparableVersion = version;\n    let isLoose = false;\n\n    const currentBrowserVersion = this.getBrowserVersion();\n\n    if (typeof currentBrowserVersion !== 'string') {\n      return void 0;\n    }\n\n    if (version[0] === '>' || version[0] === '<') {\n      comparableVersion = version.substr(1);\n      if (version[1] === '=') {\n        isLoose = true;\n        comparableVersion = version.substr(2);\n      } else {\n        expectedResults = [];\n      }\n      if (version[0] === '>') {\n        expectedResults.push(1);\n      } else {\n        expectedResults.push(-1);\n      }\n    } else if (version[0] === '=') {\n      comparableVersion = version.substr(1);\n    } else if (version[0] === '~') {\n      isLoose = true;\n      comparableVersion = version.substr(1);\n    }\n\n    return expectedResults.indexOf(\n      Utils.compareVersions(currentBrowserVersion, comparableVersion, isLoose),\n    ) > -1;\n  }\n\n  /**\n   * Check if the OS name equals the passed string\n   * @param {string} osName The string to compare with the OS name\n   * @returns {boolean}\n   */\n  isOS(osName) {\n    return this.getOSName(true) === String(osName).toLowerCase();\n  }\n\n  /**\n   * Check if the platform type equals the passed string\n   * @param {string} platformType The string to compare with the platform type\n   * @returns {boolean}\n   */\n  isPlatform(platformType) {\n    return this.getPlatformType(true) === String(platformType).toLowerCase();\n  }\n\n  /**\n   * Check if the engine name equals the passed string\n   * @param {string} engineName The string to compare with the engine name\n   * @returns {boolean}\n   */\n  isEngine(engineName) {\n    return this.getEngineName(true) === String(engineName).toLowerCase();\n  }\n\n  /**\n   * Is anything? Check if the browser is called \"anything\",\n   * the OS called \"anything\" or the platform called \"anything\"\n   * @param {String} anything\n   * @param [includingAlias=false] The flag showing whether alias will be included into comparison\n   * @returns {Boolean}\n   */\n  is(anything, includingAlias = false) {\n    return this.isBrowser(anything, includingAlias) || this.isOS(anything)\n      || this.isPlatform(anything);\n  }\n\n  /**\n   * Check if any of the given values satisfies this.is(anything)\n   * @param {String[]} anythings\n   * @returns {Boolean}\n   */\n  some(anythings = []) {\n    return anythings.some(anything => this.is(anything));\n  }\n}\n\nexport default Parser;\n", "/*!\n * Bowser - a browser detector\n * https://github.com/lancedikson/bowser\n * MIT License | (c) Dustin Diaz 2012-2015\n * MIT License | (c) Denis Demchenko 2015-2019\n */\nimport Parser from './parser.js';\nimport {\n  BROWSER_MAP,\n  ENGINE_MAP,\n  OS_MAP,\n  PLATFORMS_MAP,\n} from './constants.js';\n\n/**\n * Bowser class.\n * Keep it simple as much as it can be.\n * It's supposed to work with collections of {@link Parser} instances\n * rather then solve one-instance problems.\n * All the one-instance stuff is located in Parser class.\n *\n * @class\n * @classdesc Bowser is a static object, that provides an API to the Parsers\n * @hideconstructor\n */\nclass Bowser {\n  /**\n   * Creates a {@link Parser} instance\n   *\n   * @param {String} UA UserAgent string\n   * @param {Boolean} [skipParsing=false] Will make the Parser postpone parsing until you ask it\n   * explicitly. Same as `skipParsing` for {@link Parser}.\n   * @returns {Parser}\n   * @throws {Error} when UA is not a String\n   *\n   * @example\n   * const parser = Bowser.getParser(window.navigator.userAgent);\n   * const result = parser.getResult();\n   */\n  static getParser(UA, skipParsing = false) {\n    if (typeof UA !== 'string') {\n      throw new Error('UserAgent should be a string');\n    }\n    return new Parser(UA, skipParsing);\n  }\n\n  /**\n   * Creates a {@link Parser} instance and runs {@link Parser.getResult} immediately\n   *\n   * @param UA\n   * @return {ParsedResult}\n   *\n   * @example\n   * const result = Bowser.parse(window.navigator.userAgent);\n   */\n  static parse(UA) {\n    return (new Parser(UA)).getResult();\n  }\n\n  static get BROWSER_MAP() {\n    return BROWSER_MAP;\n  }\n\n  static get ENGINE_MAP() {\n    return ENGINE_MAP;\n  }\n\n  static get OS_MAP() {\n    return OS_MAP;\n  }\n\n  static get PLATFORMS_MAP() {\n    return PLATFORMS_MAP;\n  }\n}\n\nexport default Bowser;\n", "/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nexport * from \"./client\";\nexport * from \"./rtvi\";\n", "/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nexport * from \"./client\";\nexport * from \"./dispatcher\";\nexport * from \"./logger\";\nexport * from \"./rest_helpers\";\nexport * from \"./transport\";\nexport * from \"./utils\";\n", "/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport EventEmitter from \"events\";\nimport TypedEmitter from \"typed-emitter\";\n\nimport packageJson from \"../package.json\";\nimport {\n  BotLLMSearchResponseData,\n  BotLLMTextData,\n  BotReadyData,\n  BotTTSTextData,\n  ClientMessageData,\n  ErrorData,\n  LLMContextMessage,\n  LLMFunctionCallData,\n  LLMFunctionCallResult,\n  Participant,\n  PipecatMetricsData,\n  RTVIEvent,\n  RTVIEvents,\n  RTVIMessage,\n  RTVIMessageType,\n  SendTextOptions,\n  setAboutClient,\n  TranscriptData,\n  TransportState,\n} from \"../rtvi\";\nimport * as RTVIErrors from \"../rtvi/errors\";\nimport { transportAlreadyStarted, transportReady } from \"./decorators\";\nimport { MessageDispatcher } from \"./dispatcher\";\nimport { logger, LogLevel } from \"./logger\";\nimport {\n  APIRequest,\n  ConnectionEndpoint,\n  isAPIRequest,\n  makeRequest,\n} from \"./rest_helpers\";\nimport {\n  Tracks,\n  Transport,\n  TransportConnectionParams,\n  TransportWrapper,\n} from \"./transport\";\nimport { learnAboutClient } from \"./utils\";\n\nexport type FunctionCallParams = {\n  functionName: string;\n  arguments: Record<string, unknown>;\n};\n\nexport type FunctionCallCallback = (\n  fn: FunctionCallParams\n) => Promise<LLMFunctionCallResult | void>;\n\nexport type RTVIEventCallbacks = Partial<{\n  onConnected: () => void;\n  onDisconnected: () => void;\n  onError: (message: RTVIMessage) => void;\n  onTransportStateChanged: (state: TransportState) => void;\n\n  onBotStarted: (botResponse: unknown) => void;\n  onBotConnected: (participant: Participant) => void;\n  onBotReady: (botReadyData: BotReadyData) => void;\n  onBotDisconnected: (participant: Participant) => void;\n  onMetrics: (data: PipecatMetricsData) => void;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onServerMessage: (data: any) => void;\n  onMessageError: (message: RTVIMessage) => void;\n\n  onParticipantJoined: (participant: Participant) => void;\n  onParticipantLeft: (participant: Participant) => void;\n\n  onAvailableCamsUpdated: (cams: MediaDeviceInfo[]) => void;\n  onAvailableMicsUpdated: (mics: MediaDeviceInfo[]) => void;\n  onAvailableSpeakersUpdated: (speakers: MediaDeviceInfo[]) => void;\n  onCamUpdated: (cam: MediaDeviceInfo) => void;\n  onMicUpdated: (mic: MediaDeviceInfo) => void;\n  onSpeakerUpdated: (speaker: MediaDeviceInfo) => void;\n  onDeviceError: (error: RTVIErrors.DeviceError) => void;\n  onTrackStarted: (track: MediaStreamTrack, participant?: Participant) => void;\n  onTrackStopped: (track: MediaStreamTrack, participant?: Participant) => void;\n  onScreenTrackStarted: (\n    track: MediaStreamTrack,\n    participant?: Participant\n  ) => void;\n  onScreenTrackStopped: (\n    track: MediaStreamTrack,\n    participant?: Participant\n  ) => void;\n  onScreenShareError: (errorMessage: string) => void;\n  onLocalAudioLevel: (level: number) => void;\n  onRemoteAudioLevel: (level: number, participant: Participant) => void;\n\n  onBotStartedSpeaking: () => void;\n  onBotStoppedSpeaking: () => void;\n  onUserStartedSpeaking: () => void;\n  onUserStoppedSpeaking: () => void;\n  onUserTranscript: (data: TranscriptData) => void;\n  onBotTranscript: (data: BotLLMTextData) => void;\n\n  onBotLlmText: (data: BotLLMTextData) => void;\n  onBotLlmStarted: () => void;\n  onBotLlmStopped: () => void;\n  onBotTtsText: (data: BotTTSTextData) => void;\n  onBotTtsStarted: () => void;\n  onBotTtsStopped: () => void;\n\n  onLLMFunctionCall: (data: LLMFunctionCallData) => void;\n  onBotLlmSearchResponse: (data: BotLLMSearchResponseData) => void;\n}>;\n\nexport interface PipecatClientOptions {\n  /**\n   * Transport class for media streaming\n   */\n  transport: Transport;\n\n  /**\n   * Optional callback methods for RTVI events\n   */\n  callbacks?: RTVIEventCallbacks;\n\n  /**\n   * Enable user mic input\n   *\n   * Default to true\n   */\n  enableMic?: boolean;\n\n  /**\n   * Enable user cam input\n   *\n   * Default to false\n   */\n  enableCam?: boolean;\n\n  /**\n   * Enable screen sharing\n   *\n   * Default to false\n   */\n  enableScreenShare?: boolean;\n}\n\nabstract class RTVIEventEmitter extends (EventEmitter as unknown as new () => TypedEmitter<RTVIEvents>) {}\n\nexport class PipecatClient extends RTVIEventEmitter {\n  protected _options: PipecatClientOptions;\n  private _connectResolve: ((value: BotReadyData) => void) | undefined;\n  protected _transport: Transport;\n  protected _transportWrapper: TransportWrapper;\n  protected declare _messageDispatcher: MessageDispatcher;\n  protected _functionCallCallbacks: Record<string, FunctionCallCallback> = {};\n  protected _abortController: AbortController | undefined;\n\n  constructor(options: PipecatClientOptions) {\n    super();\n\n    setAboutClient(learnAboutClient());\n\n    this._transport = options.transport;\n    this._transportWrapper = new TransportWrapper(this._transport);\n\n    // Wrap transport callbacks with event triggers\n    // This allows for either functional callbacks or .on / .off event listeners\n    const wrappedCallbacks: RTVIEventCallbacks = {\n      ...options.callbacks,\n      onMessageError: (message: RTVIMessage) => {\n        options?.callbacks?.onMessageError?.(message);\n        this.emit(RTVIEvent.MessageError, message);\n      },\n      onError: (message: RTVIMessage) => {\n        options?.callbacks?.onError?.(message);\n        try {\n          this.emit(RTVIEvent.Error, message);\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        } catch (e) {\n          logger.debug(\"Could not emit error\", message);\n        }\n        const data = message.data as ErrorData;\n        if (data?.fatal) {\n          logger.error(\"Fatal error reported. Disconnecting...\");\n          this.disconnect();\n        }\n      },\n      onConnected: () => {\n        options?.callbacks?.onConnected?.();\n        this.emit(RTVIEvent.Connected);\n      },\n      onDisconnected: () => {\n        options?.callbacks?.onDisconnected?.();\n        this.emit(RTVIEvent.Disconnected);\n      },\n      onTransportStateChanged: (state: TransportState) => {\n        options?.callbacks?.onTransportStateChanged?.(state);\n        this.emit(RTVIEvent.TransportStateChanged, state);\n      },\n      onParticipantJoined: (p) => {\n        options?.callbacks?.onParticipantJoined?.(p);\n        this.emit(RTVIEvent.ParticipantConnected, p);\n      },\n      onParticipantLeft: (p) => {\n        options?.callbacks?.onParticipantLeft?.(p);\n        this.emit(RTVIEvent.ParticipantLeft, p);\n      },\n      onTrackStarted: (track, p) => {\n        options?.callbacks?.onTrackStarted?.(track, p);\n        this.emit(RTVIEvent.TrackStarted, track, p);\n      },\n      onTrackStopped: (track, p) => {\n        options?.callbacks?.onTrackStopped?.(track, p);\n        this.emit(RTVIEvent.TrackStopped, track, p);\n      },\n      onScreenTrackStarted: (track, p) => {\n        options?.callbacks?.onScreenTrackStarted?.(track, p);\n        this.emit(RTVIEvent.ScreenTrackStarted, track, p);\n      },\n      onScreenTrackStopped: (track, p) => {\n        options?.callbacks?.onScreenTrackStopped?.(track, p);\n        this.emit(RTVIEvent.ScreenTrackStopped, track, p);\n      },\n      onScreenShareError: (errorMessage) => {\n        options?.callbacks?.onScreenShareError?.(errorMessage);\n        this.emit(RTVIEvent.ScreenShareError, errorMessage);\n      },\n      onAvailableCamsUpdated: (cams) => {\n        options?.callbacks?.onAvailableCamsUpdated?.(cams);\n        this.emit(RTVIEvent.AvailableCamsUpdated, cams);\n      },\n      onAvailableMicsUpdated: (mics) => {\n        options?.callbacks?.onAvailableMicsUpdated?.(mics);\n        this.emit(RTVIEvent.AvailableMicsUpdated, mics);\n      },\n      onAvailableSpeakersUpdated: (speakers) => {\n        options?.callbacks?.onAvailableSpeakersUpdated?.(speakers);\n        this.emit(RTVIEvent.AvailableSpeakersUpdated, speakers);\n      },\n      onCamUpdated: (cam) => {\n        options?.callbacks?.onCamUpdated?.(cam);\n        this.emit(RTVIEvent.CamUpdated, cam);\n      },\n      onMicUpdated: (mic) => {\n        options?.callbacks?.onMicUpdated?.(mic);\n        this.emit(RTVIEvent.MicUpdated, mic);\n      },\n      onSpeakerUpdated: (speaker) => {\n        options?.callbacks?.onSpeakerUpdated?.(speaker);\n        this.emit(RTVIEvent.SpeakerUpdated, speaker);\n      },\n      onDeviceError: (error) => {\n        options?.callbacks?.onDeviceError?.(error);\n        this.emit(RTVIEvent.DeviceError, error);\n      },\n      onBotStarted: (botResponse: unknown) => {\n        options?.callbacks?.onBotStarted?.(botResponse);\n        this.emit(RTVIEvent.BotStarted, botResponse);\n      },\n      onBotConnected: (p) => {\n        options?.callbacks?.onBotConnected?.(p);\n        this.emit(RTVIEvent.BotConnected, p);\n      },\n      onBotReady: (botReadyData: BotReadyData) => {\n        options?.callbacks?.onBotReady?.(botReadyData);\n        this.emit(RTVIEvent.BotReady, botReadyData);\n      },\n      onBotDisconnected: (p) => {\n        options?.callbacks?.onBotDisconnected?.(p);\n        this.emit(RTVIEvent.BotDisconnected, p);\n      },\n      onBotStartedSpeaking: () => {\n        options?.callbacks?.onBotStartedSpeaking?.();\n        this.emit(RTVIEvent.BotStartedSpeaking);\n      },\n      onBotStoppedSpeaking: () => {\n        options?.callbacks?.onBotStoppedSpeaking?.();\n        this.emit(RTVIEvent.BotStoppedSpeaking);\n      },\n      onRemoteAudioLevel: (level, p) => {\n        options?.callbacks?.onRemoteAudioLevel?.(level, p);\n        this.emit(RTVIEvent.RemoteAudioLevel, level, p);\n      },\n      onUserStartedSpeaking: () => {\n        options?.callbacks?.onUserStartedSpeaking?.();\n        this.emit(RTVIEvent.UserStartedSpeaking);\n      },\n      onUserStoppedSpeaking: () => {\n        options?.callbacks?.onUserStoppedSpeaking?.();\n        this.emit(RTVIEvent.UserStoppedSpeaking);\n      },\n      onLocalAudioLevel: (level) => {\n        options?.callbacks?.onLocalAudioLevel?.(level);\n        this.emit(RTVIEvent.LocalAudioLevel, level);\n      },\n      onUserTranscript: (data) => {\n        options?.callbacks?.onUserTranscript?.(data);\n        this.emit(RTVIEvent.UserTranscript, data);\n      },\n      onBotTranscript: (text) => {\n        options?.callbacks?.onBotTranscript?.(text);\n        this.emit(RTVIEvent.BotTranscript, text);\n      },\n      onBotLlmText: (text) => {\n        options?.callbacks?.onBotLlmText?.(text);\n        this.emit(RTVIEvent.BotLlmText, text);\n      },\n      onBotLlmStarted: () => {\n        options?.callbacks?.onBotLlmStarted?.();\n        this.emit(RTVIEvent.BotLlmStarted);\n      },\n      onBotLlmStopped: () => {\n        options?.callbacks?.onBotLlmStopped?.();\n        this.emit(RTVIEvent.BotLlmStopped);\n      },\n      onBotTtsText: (text) => {\n        options?.callbacks?.onBotTtsText?.(text);\n        this.emit(RTVIEvent.BotTtsText, text);\n      },\n      onBotTtsStarted: () => {\n        options?.callbacks?.onBotTtsStarted?.();\n        this.emit(RTVIEvent.BotTtsStarted);\n      },\n      onBotTtsStopped: () => {\n        options?.callbacks?.onBotTtsStopped?.();\n        this.emit(RTVIEvent.BotTtsStopped);\n      },\n    };\n\n    // Update options to reference wrapped callbacks and config defaults\n    this._options = {\n      ...options,\n      callbacks: wrappedCallbacks,\n      enableMic: options.enableMic ?? true,\n      enableCam: options.enableCam ?? false,\n      enableScreenShare: options.enableScreenShare ?? false,\n    };\n\n    // Instantiate the transport class and bind message handler\n    this._initialize();\n\n    // Get package version number\n    logger.debug(\"[Pipecat Client] Initialized\", this.version);\n  }\n\n  public setLogLevel(level: LogLevel) {\n    logger.setLevel(level);\n  }\n\n  // ------ Transport methods\n\n  /**\n   * Initialize local media devices\n   */\n  public async initDevices() {\n    logger.debug(\"[Pipecat Client] Initializing devices...\");\n    await this._transport.initDevices();\n  }\n\n  /**\n   * startBot() is a method that initiates the bot by posting to a specified endpoint\n   * that optionally returns connection parameters for establishing a transport session.\n   * @param startBotParams\n   * @returns Promise that resolves to TransportConnectionParams or unknown\n   */\n  @transportAlreadyStarted\n  public async startBot(startBotParams: APIRequest): Promise<unknown> {\n    this._transport.state = \"authenticating\";\n    this._abortController = new AbortController();\n    let response: unknown;\n    try {\n      response = await makeRequest(startBotParams, this._abortController);\n    } catch (e) {\n      let errMsg = \"An unknown error occurred while starting the bot.\";\n      let status;\n      if (e instanceof Response) {\n        const errResp = await e.json();\n        errMsg = errResp.info ?? errResp.detail ?? e.statusText;\n        status = e.status;\n      } else if (e instanceof Error) {\n        errMsg = e.message;\n      }\n      this._options.callbacks?.onError?.(\n        new RTVIMessage(RTVIMessageType.ERROR_RESPONSE, {\n          message: errMsg,\n          fatal: true,\n        })\n      );\n      throw new RTVIErrors.StartBotError(errMsg, status);\n    }\n    this._transport.state = \"authenticated\";\n    this._options.callbacks?.onBotStarted?.(response);\n    return response;\n  }\n\n  /**\n   * The `connect` function establishes a transport session and awaits a\n   * bot-ready signal, handling various connection states and errors.\n   * @param {TransportConnectionParams} [connectParams] -\n   * The `connectParams` parameter in the `connect` method should be of type\n   * `TransportConnectionParams`. This parameter is passed to the transport\n   * for establishing a transport session.\n   * NOTE: `connectParams` as type `ConnectionEndpoint` IS NOW DEPRECATED. If you\n   * want to authenticate and connect to a bot in one step, use\n   * `startBotAndConnect()` instead.\n   * @returns The `connect` method returns a Promise that resolves to an unknown value.\n   */\n  @transportAlreadyStarted\n  public async connect(\n    connectParams?: TransportConnectionParams | ConnectionEndpoint\n  ): Promise<BotReadyData> {\n    if (connectParams && isAPIRequest(connectParams)) {\n      logger.warn(\n        \"Calling connect with an API endpoint is deprecated. Use startBotAndConnect() instead.\"\n      );\n      return this.startBotAndConnect(connectParams as APIRequest);\n    }\n\n    // Establish transport session and await bot ready signal\n    return new Promise((resolve, reject) => {\n      (async () => {\n        this._connectResolve = resolve;\n\n        if (this._transport.state === \"disconnected\") {\n          await this._transport.initDevices();\n        }\n\n        try {\n          await this._transport.connect(\n            connectParams as TransportConnectionParams\n          );\n          await this._transport.sendReadyMessage();\n        } catch (e) {\n          this.disconnect();\n          reject(e);\n          return;\n        }\n      })();\n    });\n  }\n\n  @transportAlreadyStarted\n  public async startBotAndConnect(\n    startBotParams: APIRequest\n  ): Promise<BotReadyData> {\n    // since startBot() will change the transport state, we need\n    // to do device initialization here.\n    if (this._transport.state === \"disconnected\") {\n      await this._transport.initDevices();\n    }\n\n    const connectionParams = await this.startBot(startBotParams);\n    return this.connect(connectionParams);\n  }\n\n  /**\n   * Disconnect the voice client from the transport\n   * Reset / reinitialize transport and abort any pending requests\n   */\n  public async disconnect(): Promise<void> {\n    await this._transport.disconnect();\n    this._messageDispatcher.disconnect();\n  }\n\n  /**\n   * The _initialize function performs internal set up of the transport and\n   * message dispatcher.\n   */\n  private _initialize() {\n    this._transport.initialize(this._options, this.handleMessage.bind(this));\n\n    // Create a new message dispatch queue for async message handling\n    this._messageDispatcher = new MessageDispatcher(\n      this._transport.sendMessage.bind(this._transport)\n    );\n  }\n\n  /**\n   * Get the current state of the transport\n   */\n  public get connected(): boolean {\n    return [\"connected\", \"ready\"].includes(this._transport.state);\n  }\n\n  public get transport(): Transport {\n    return this._transportWrapper.proxy;\n  }\n\n  public get state(): TransportState {\n    return this._transport.state;\n  }\n\n  public get version(): string {\n    return packageJson.version;\n  }\n\n  // ------ Device methods\n\n  public async getAllMics(): Promise<MediaDeviceInfo[]> {\n    return await this._transport.getAllMics();\n  }\n\n  public async getAllCams(): Promise<MediaDeviceInfo[]> {\n    return await this._transport.getAllCams();\n  }\n\n  public async getAllSpeakers(): Promise<MediaDeviceInfo[]> {\n    return await this._transport.getAllSpeakers();\n  }\n\n  public get selectedMic() {\n    return this._transport.selectedMic;\n  }\n\n  public get selectedCam() {\n    return this._transport.selectedCam;\n  }\n\n  public get selectedSpeaker() {\n    return this._transport.selectedSpeaker;\n  }\n\n  public updateMic(micId: string) {\n    this._transport.updateMic(micId);\n  }\n\n  public updateCam(camId: string) {\n    this._transport.updateCam(camId);\n  }\n\n  public updateSpeaker(speakerId: string) {\n    this._transport.updateSpeaker(speakerId);\n  }\n\n  public enableMic(enable: boolean) {\n    this._transport.enableMic(enable);\n  }\n\n  public get isMicEnabled(): boolean {\n    return this._transport.isMicEnabled;\n  }\n\n  public enableCam(enable: boolean) {\n    this._transport.enableCam(enable);\n  }\n\n  public get isCamEnabled(): boolean {\n    return this._transport.isCamEnabled;\n  }\n\n  public tracks(): Tracks {\n    return this._transport.tracks();\n  }\n\n  public enableScreenShare(enable: boolean) {\n    return this._transport.enableScreenShare(enable);\n  }\n\n  public get isSharingScreen(): boolean {\n    return this._transport.isSharingScreen;\n  }\n\n  // ------ Messages\n\n  /**\n   * Directly send a message to the bot via the transport.\n   * Do not await a response.\n   * @param msgType - a string representing the message type\n   * @param data - a dictionary of data to send with the message\n   */\n  @transportReady\n  public sendClientMessage(msgType: string, data?: unknown): void {\n    this._transport.sendMessage(\n      new RTVIMessage(RTVIMessageType.CLIENT_MESSAGE, {\n        t: msgType,\n        d: data,\n      } as ClientMessageData)\n    );\n  }\n\n  /**\n   * Directly send a message to the bot via the transport.\n   * Wait for and return the response.\n   * @param msgType - a string representing the message type\n   * @param data - a dictionary of data to send with the message\n   * @param timeout - optional timeout in milliseconds for the response\n   */\n  @transportReady\n  public async sendClientRequest(\n    msgType: string,\n    data: unknown,\n    timeout?: number\n  ) {\n    const msgData: ClientMessageData = { t: msgType, d: data };\n    const response = await this._messageDispatcher.dispatch(\n      msgData,\n      RTVIMessageType.CLIENT_MESSAGE,\n      timeout\n    );\n    const ret_data = response.data as ClientMessageData;\n    return ret_data.d;\n  }\n\n  public registerFunctionCallHandler(\n    functionName: string,\n    callback: FunctionCallCallback\n  ) {\n    this._functionCallCallbacks[functionName] = callback;\n  }\n\n  public unregisterFunctionCallHandler(functionName: string) {\n    delete this._functionCallCallbacks[functionName];\n  }\n\n  public unregisterAllFunctionCallHandlers() {\n    this._functionCallCallbacks = {};\n  }\n\n  @transportReady\n  public async appendToContext(context: LLMContextMessage) {\n    logger.warn(\"appendToContext() is deprecated. Use sendText() instead.\");\n    await this._transport.sendMessage(\n      new RTVIMessage(RTVIMessageType.APPEND_TO_CONTEXT, {\n        role: context.role,\n        content: context.content,\n        run_immediately: context.run_immediately,\n      } as LLMContextMessage)\n    );\n    return true;\n  }\n\n  @transportReady\n  public async sendText(content: string, options: SendTextOptions = {}) {\n    await this._transport.sendMessage(\n      new RTVIMessage(RTVIMessageType.SEND_TEXT, {\n        content,\n        options,\n      })\n    );\n  }\n\n  /**\n   * Disconnects the bot, but keeps the session alive\n   */\n  @transportReady\n  public disconnectBot(): void {\n    this._transport.sendMessage(\n      new RTVIMessage(RTVIMessageType.DISCONNECT_BOT, {})\n    );\n  }\n\n  protected handleMessage(ev: RTVIMessage): void {\n    logger.debug(\"[RTVI Message]\", ev);\n\n    switch (ev.type) {\n      case RTVIMessageType.BOT_READY: {\n        const data = ev.data as BotReadyData;\n        const botVersion = data.version\n          ? data.version.split(\".\").map(Number)\n          : [0, 0, 0];\n        logger.debug(`[Pipecat Client] Bot is ready. Version: ${data.version}`);\n        if (botVersion[0] < 1) {\n          logger.warn(\n            \"[Pipecat Client] Bot version is less than 1.0.0, which may not be compatible with this client.\"\n          );\n        }\n        this._connectResolve?.(ev.data as BotReadyData);\n        this._options.callbacks?.onBotReady?.(ev.data as BotReadyData);\n        break;\n      }\n      case RTVIMessageType.ERROR:\n        this._options.callbacks?.onError?.(ev);\n        break;\n      case RTVIMessageType.SERVER_RESPONSE: {\n        this._messageDispatcher.resolve(ev);\n        break;\n      }\n      case RTVIMessageType.ERROR_RESPONSE: {\n        const resp = this._messageDispatcher.reject(ev);\n        this._options.callbacks?.onMessageError?.(resp as RTVIMessage);\n        break;\n      }\n      case RTVIMessageType.USER_STARTED_SPEAKING:\n        this._options.callbacks?.onUserStartedSpeaking?.();\n        break;\n      case RTVIMessageType.USER_STOPPED_SPEAKING:\n        this._options.callbacks?.onUserStoppedSpeaking?.();\n        break;\n      case RTVIMessageType.BOT_STARTED_SPEAKING:\n        this._options.callbacks?.onBotStartedSpeaking?.();\n        break;\n      case RTVIMessageType.BOT_STOPPED_SPEAKING:\n        this._options.callbacks?.onBotStoppedSpeaking?.();\n        break;\n      case RTVIMessageType.USER_TRANSCRIPTION: {\n        const TranscriptData = ev.data as TranscriptData;\n        this._options.callbacks?.onUserTranscript?.(TranscriptData);\n        break;\n      }\n      case RTVIMessageType.BOT_TRANSCRIPTION: {\n        this._options.callbacks?.onBotTranscript?.(ev.data as BotLLMTextData);\n        break;\n      }\n      case RTVIMessageType.BOT_LLM_TEXT:\n        this._options.callbacks?.onBotLlmText?.(ev.data as BotLLMTextData);\n        break;\n      case RTVIMessageType.BOT_LLM_STARTED:\n        this._options.callbacks?.onBotLlmStarted?.();\n        break;\n      case RTVIMessageType.BOT_LLM_STOPPED:\n        this._options.callbacks?.onBotLlmStopped?.();\n        break;\n      case RTVIMessageType.BOT_TTS_TEXT:\n        this._options.callbacks?.onBotTtsText?.(ev.data as BotTTSTextData);\n        break;\n      case RTVIMessageType.BOT_TTS_STARTED:\n        this._options.callbacks?.onBotTtsStarted?.();\n        break;\n      case RTVIMessageType.BOT_TTS_STOPPED:\n        this._options.callbacks?.onBotTtsStopped?.();\n        break;\n      case RTVIMessageType.METRICS:\n        this._options.callbacks?.onMetrics?.(ev.data as PipecatMetricsData);\n        this.emit(RTVIEvent.Metrics, ev.data as PipecatMetricsData);\n        break;\n      case RTVIMessageType.SERVER_MESSAGE: {\n        this._options.callbacks?.onServerMessage?.(ev.data);\n        this.emit(RTVIEvent.ServerMessage, ev.data);\n        break;\n      }\n      case RTVIMessageType.LLM_FUNCTION_CALL: {\n        const data = ev.data as LLMFunctionCallData;\n        // First check if there's a registered function call handler\n        // and trigger it if so.\n        const fc = this._functionCallCallbacks[data.function_name];\n        if (fc) {\n          const params = {\n            functionName: data.function_name,\n            arguments: data.args,\n          };\n          /*\n           * registered function call handlers have the ability to\n           * asynchronously return a result that is sent back to the server\n           * as an automatically crafted LLM_FUNCTION_CALL_RESULT message.\n           * Note: If the callback returns null or undefined, no result message\n           * is sent.\n           */\n          fc(params).then((result) => {\n            // == intentional to check for null or undefined\n            if (result == undefined) {\n              return;\n            }\n            this._transport.sendMessage(\n              new RTVIMessage(RTVIMessageType.LLM_FUNCTION_CALL_RESULT, {\n                function_name: data.function_name,\n                tool_call_id: data.tool_call_id,\n                arguments: data.args,\n                result,\n              })\n            );\n          });\n        }\n        /*\n         * Now emit the event for any generic LLMFunctionCall listeners/callbacks\n         * Note: When using these, the onus is on the client to generate and\n         *       send the LLM_FUNCTION_CALL_RESULT message if needed.\n         */\n        this._options.callbacks?.onLLMFunctionCall?.(data);\n        this.emit(RTVIEvent.LLMFunctionCall, data);\n        break;\n      }\n      case RTVIMessageType.BOT_LLM_SEARCH_RESPONSE: {\n        const data = ev.data as BotLLMSearchResponseData;\n        this._options.callbacks?.onBotLlmSearchResponse?.(data);\n        this.emit(RTVIEvent.BotLlmSearchResponse, data);\n        break;\n      }\n      default: {\n        logger.debug(\"[Pipecat Client] Unrecognized message type\", ev.type);\n        break;\n      }\n    }\n  }\n\n  // ------ Helpers\n}\n", "{\n  \"name\": \"@pipecat-ai/client-js\",\n  \"version\": \"1.4.0\",\n  \"license\": \"BSD-2-Clause\",\n  \"main\": \"dist/index.js\",\n  \"module\": \"dist/index.module.js\",\n  \"types\": \"dist/index.d.ts\",\n  \"source\": \"index.ts\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/pipecat-ai/pipecat-client-web.git\"\n  },\n  \"files\": [\n    \"dist\",\n    \"package.json\",\n    \"README.md\"\n  ],\n  \"scripts\": {\n    \"build\": \"jest --silent --passWithNoTests && parcel build --no-cache\",\n    \"dev\": \"parcel watch\",\n    \"lint\": \"eslint . --report-unused-disable-directives --max-warnings 0\",\n    \"test\": \"jest\"\n  },\n  \"jest\": {\n    \"preset\": \"ts-jest\",\n    \"testEnvironment\": \"jsdom\"\n  },\n  \"devDependencies\": {\n    \"@jest/globals\": \"^29.7.0\",\n    \"@types/clone-deep\": \"^4.0.4\",\n    \"@types/jest\": \"^29.5.12\",\n    \"@types/uuid\": \"^10.0.0\",\n    \"eslint\": \"^9.11.1\",\n    \"eslint-config-prettier\": \"^9.1.0\",\n    \"eslint-plugin-simple-import-sort\": \"^12.1.1\",\n    \"jest\": \"^29.7.0\",\n    \"jest-environment-jsdom\": \"^30.0.2\",\n    \"ts-jest\": \"^29.2.5\"\n  },\n  \"dependencies\": {\n    \"@types/events\": \"^3.0.3\",\n    \"bowser\": \"^2.11.0\",\n    \"clone-deep\": \"^4.0.1\",\n    \"events\": \"^3.3.0\",\n    \"typed-emitter\": \"^2.1.0\",\n    \"uuid\": \"^10.0.0\"\n  }\n}\n", "/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nexport * from \"./common_types\";\nexport * from \"./errors\";\nexport * from \"./events\";\nexport * from \"./messages\";\n", "export type TransportState =\n  | \"disconnected\"\n  | \"initializing\"\n  | \"initialized\"\n  | \"authenticating\"\n  | \"authenticated\"\n  | \"connecting\"\n  | \"connected\"\n  | \"ready\"\n  | \"disconnecting\"\n  | \"error\";\n\nexport enum TransportStateEnum {\n  DISCONNECTED = \"disconnected\",\n  INITIALIZING = \"initializing\",\n  INITIALIZED = \"initialized\",\n  AUTHENTICATING = \"authenticating\",\n  AUTHENTICATED = \"authenticated\",\n  CONNECTING = \"connecting\",\n  CONNECTED = \"connected\",\n  READY = \"ready\",\n  DISCONNECTING = \"disconnecting\",\n  ERROR = \"error\",\n}\n\nexport type Participant = {\n  id: string;\n  name: string;\n  local: boolean;\n};\n", "/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nexport class RTVIError extends Error {\n  readonly status: number | undefined;\n\n  constructor(message?: string, status?: number | undefined) {\n    super(message);\n    this.status = status;\n  }\n}\n\nexport class ConnectionTimeoutError extends RTVIError {\n  constructor(message?: string | undefined) {\n    super(\n      message ??\n        \"Bot did not enter ready state within the specified timeout period.\"\n    );\n  }\n}\n\nexport class StartBotError extends RTVIError {\n  readonly error: string = \"invalid-request-error\";\n  constructor(message?: string | undefined, status?: number) {\n    super(\n      message ?? `Failed to connect / invalid auth bundle from base url`,\n      status ?? 500\n    );\n  }\n}\n\nexport class TransportStartError extends RTVIError {\n  constructor(message?: string | undefined) {\n    super(message ?? \"Unable to connect to transport\");\n  }\n}\n\nexport class InvalidTransportParamsError extends RTVIError {\n  constructor(message?: string | undefined) {\n    super(message ?? \"Invalid transport connection parameters\");\n  }\n}\n\nexport class BotNotReadyError extends RTVIError {\n  constructor(message?: string | undefined) {\n    super(\n      message ??\n        \"Attempt to call action on transport when not in 'ready' state.\"\n    );\n  }\n}\n\nexport class BotAlreadyStartedError extends RTVIError {\n  constructor(message?: string | undefined) {\n    super(\n      message ??\n        \"Pipecat client has already been started. Please call disconnect() before starting again.\"\n    );\n  }\n}\n\nexport class UnsupportedFeatureError extends RTVIError {\n  readonly feature: string;\n  constructor(feature: string, source?: string, message?: string) {\n    let msg = `${feature} not supported${message ? `: ${message}` : \"\"}`;\n    if (source) {\n      msg = `${source} does not support ${feature}${\n        message ? `: ${message}` : \"\"\n      }`;\n    }\n    super(msg);\n    this.feature = feature;\n  }\n}\n\nexport type DeviceArray = Array<\"cam\" | \"mic\" | \"speaker\">;\nexport type DeviceErrorType =\n  | \"in-use\"\n  | \"permissions\"\n  | \"undefined-mediadevices\"\n  | \"not-found\"\n  | \"constraints\"\n  | \"unknown\";\nexport type DeviceErrorDetails = Record<\n  string,\n  string | boolean | number | Error\n>;\n\nexport class DeviceError extends RTVIError {\n  readonly devices: DeviceArray;\n  readonly type: DeviceErrorType;\n  readonly details: DeviceErrorDetails | undefined;\n  constructor(\n    devices: DeviceArray,\n    type: DeviceErrorType,\n    message?: string,\n    details?: DeviceErrorDetails\n  ) {\n    super(message ?? `Device error for ${devices.join(\", \")}: ${type}`);\n    this.devices = devices;\n    this.type = type;\n    this.details = details;\n  }\n}\n", "/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { Participant, TransportState } from \"./common_types\";\nimport { DeviceError } from \"./errors\";\nimport {\n  BotLLMSearchResponseData,\n  BotLLMTextData,\n  BotReadyData,\n  BotTTSTextData,\n  LLMFunctionCallData,\n  PipecatMetricsData,\n  RTVIMessage,\n  TranscriptData,\n} from \"./messages\";\n\nexport enum RTVIEvent {\n  /** local connection state events */\n  Connected = \"connected\",\n  Disconnected = \"disconnected\",\n  TransportStateChanged = \"transportStateChanged\",\n\n  /** remote connection state events */\n  BotStarted = \"botStarted\",\n  BotConnected = \"botConnected\",\n  BotReady = \"botReady\",\n  BotDisconnected = \"botDisconnected\",\n  Error = \"error\",\n\n  /** server messaging */\n  ServerMessage = \"serverMessage\",\n  ServerResponse = \"serverResponse\",\n  MessageError = \"messageError\",\n\n  /** service events */\n  Metrics = \"metrics\",\n\n  // vad events\n  BotStartedSpeaking = \"botStartedSpeaking\",\n  BotStoppedSpeaking = \"botStoppedSpeaking\",\n  UserStartedSpeaking = \"userStartedSpeaking\",\n  UserStoppedSpeaking = \"userStoppedSpeaking\",\n\n  // stt events\n  UserTranscript = \"userTranscript\",\n  BotTranscript = \"botTranscript\",\n\n  // llm events\n  BotLlmText = \"botLlmText\",\n  BotLlmStarted = \"botLlmStarted\",\n  BotLlmStopped = \"botLlmStopped\",\n\n  LLMFunctionCall = \"llmFunctionCall\",\n\n  BotLlmSearchResponse = \"botLlmSearchResponse\",\n\n  // tts events\n  BotTtsText = \"botTtsText\",\n  BotTtsStarted = \"botTtsStarted\",\n  BotTtsStopped = \"botTtsStopped\",\n\n  /** participant events */\n  ParticipantConnected = \"participantConnected\",\n  ParticipantLeft = \"participantLeft\",\n\n  /** media events */\n  TrackStarted = \"trackStarted\",\n  TrackStopped = \"trackStopped\",\n  ScreenTrackStarted = \"screenTrackStarted\",\n  ScreenTrackStopped = \"screenTrackStopped\",\n  ScreenShareError = \"screenShareError\",\n\n  LocalAudioLevel = \"localAudioLevel\",\n  RemoteAudioLevel = \"remoteAudioLevel\",\n\n  /** media device events */\n  AvailableCamsUpdated = \"availableCamsUpdated\",\n  AvailableMicsUpdated = \"availableMicsUpdated\",\n  AvailableSpeakersUpdated = \"availableSpeakersUpdated\",\n  CamUpdated = \"camUpdated\",\n  MicUpdated = \"micUpdated\",\n  SpeakerUpdated = \"speakerUpdated\",\n  DeviceError = \"deviceError\",\n}\n\nexport type RTVIEvents = Partial<{\n  /** local connection state events */\n  connected: () => void;\n  disconnected: () => void;\n  transportStateChanged: (state: TransportState) => void;\n\n  /** remote connection state events */\n  botStarted: (botResponse: unknown) => void;\n  botConnected: (participant: Participant) => void;\n  botReady: (botData: BotReadyData) => void;\n  botDisconnected: (participant: Participant) => void;\n  error: (message: RTVIMessage) => void;\n\n  /** server messaging */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  serverMessage: (data: any) => void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  serverResponse: (data: any) => void;\n  messageError: (message: RTVIMessage) => void;\n\n  /** service events */\n  metrics: (data: PipecatMetricsData) => void;\n\n  // vad events\n  botStartedSpeaking: () => void;\n  botStoppedSpeaking: () => void;\n  userStartedSpeaking: () => void;\n  userStoppedSpeaking: () => void;\n\n  // stt events\n  userTranscript: (data: TranscriptData) => void;\n  botTranscript: (data: BotLLMTextData) => void;\n\n  // llm events\n  botLlmText: (data: BotLLMTextData) => void;\n  botLlmStarted: () => void;\n  botLlmStopped: () => void;\n\n  llmFunctionCall: (func: LLMFunctionCallData) => void;\n\n  botLlmSearchResponse: (data: BotLLMSearchResponseData) => void;\n\n  // tts events\n  botTtsText: (data: BotTTSTextData) => void;\n  botTtsStarted: () => void;\n  botTtsStopped: () => void;\n\n  /** participant events */\n  participantConnected: (participant: Participant) => void;\n  participantLeft: (participant: Participant) => void;\n\n  /** media events */\n  trackStarted: (track: MediaStreamTrack, participant?: Participant) => void;\n  trackStopped: (track: MediaStreamTrack, participant?: Participant) => void;\n  screenTrackStarted: (track: MediaStreamTrack, p?: Participant) => void;\n  screenTrackStopped: (track: MediaStreamTrack, p?: Participant) => void;\n  screenShareError: (errorMessage: string) => void;\n\n  localAudioLevel: (level: number) => void;\n  remoteAudioLevel: (level: number, p: Participant) => void;\n\n  /** media device events */\n  availableCamsUpdated: (cams: MediaDeviceInfo[]) => void;\n  availableMicsUpdated: (mics: MediaDeviceInfo[]) => void;\n  availableSpeakersUpdated: (speakers: MediaDeviceInfo[]) => void;\n  camUpdated: (cam: MediaDeviceInfo) => void;\n  micUpdated: (mic: MediaDeviceInfo) => void;\n  speakerUpdated: (speaker: MediaDeviceInfo) => void;\n  deviceError: (error: DeviceError) => void;\n}>;\n\nexport type RTVIEventHandler<E extends RTVIEvent> = E extends keyof RTVIEvents\n  ? RTVIEvents[E]\n  : never;\n", "/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport {\n  name as packageName,\n  version as packageVersion,\n} from \"../package.json\";\n\nexport const RTVI_PROTOCOL_VERSION = \"1.0.0\";\nexport const RTVI_MESSAGE_LABEL = \"rtvi-ai\";\n\n/**\n * Messages the corresponding server-side client expects to receive about\n * our client-side state.\n */\nexport enum RTVIMessageType {\n  /** Outbound Messages */\n  CLIENT_READY = \"client-ready\",\n  DISCONNECT_BOT = \"disconnect-bot\",\n  // Client-to-server messages\n  CLIENT_MESSAGE = \"client-message\",\n  SEND_TEXT = \"send-text\",\n  // DEPRECATED\n  APPEND_TO_CONTEXT = \"append-to-context\",\n\n  /**\n   * Inbound Messages\n   * Messages the server-side client sends to our client-side client regarding\n   * its state or other non-service-specific messaging.\n   */\n  BOT_READY = \"bot-ready\", // Bot is connected and ready to receive messages\n  ERROR = \"error\", // Bot initialization error\n  METRICS = \"metrics\", // Bot reporting metrics\n  SERVER_MESSAGE = \"server-message\", // Custom server-to-client message\n  SERVER_RESPONSE = \"server-response\", // Server response to client message\n  ERROR_RESPONSE = \"error-response\", // Error message in response to an outbound message\n  APPEND_TO_CONTEXT_RESULT = \"append-to-context-result\", // Result of appending to context\n\n  /** Transcription Messages */\n  USER_TRANSCRIPTION = \"user-transcription\", // Local user speech to text transcription (partials and finals)\n  BOT_TRANSCRIPTION = \"bot-transcription\", // Bot full text transcription (sentence aggregated)\n  USER_STARTED_SPEAKING = \"user-started-speaking\", // User started speaking\n  USER_STOPPED_SPEAKING = \"user-stopped-speaking\", // User stopped speaking\n  BOT_STARTED_SPEAKING = \"bot-started-speaking\", // Bot started speaking\n  BOT_STOPPED_SPEAKING = \"bot-stopped-speaking\", // Bot stopped speaking\n\n  /** LLM Messages */\n  USER_LLM_TEXT = \"user-llm-text\", // Aggregated user input text which is sent to LLM\n  BOT_LLM_TEXT = \"bot-llm-text\", // Streamed token returned by the LLM\n  BOT_LLM_STARTED = \"bot-llm-started\", // Bot LLM inference starts\n  BOT_LLM_STOPPED = \"bot-llm-stopped\", // Bot LLM inference stops\n\n  // Function calling\n  LLM_FUNCTION_CALL = \"llm-function-call\", // Inbound function call from LLM\n  LLM_FUNCTION_CALL_RESULT = \"llm-function-call-result\", // Outbound result of function call\n\n  BOT_LLM_SEARCH_RESPONSE = \"bot-llm-search-response\", // Bot LLM search response\n\n  /** TTS Messages */\n  BOT_TTS_TEXT = \"bot-tts-text\", // Bot TTS text output (streamed word as it is spoken)\n  BOT_TTS_STARTED = \"bot-tts-started\", // Bot TTS response starts\n  BOT_TTS_STOPPED = \"bot-tts-stopped\", // Bot TTS response stops\n}\n\n// ----- Message Data Types\n\nexport type BotReadyData = {\n  version: string;\n  about?: unknown; // Optional about data from the bot\n};\n\ntype PlatformDetailsValue = undefined | string | number | boolean;\ntype NestedPlatformDetails =\n  | PlatformDetailsValue\n  | Record<string, PlatformDetailsValue>;\n\n// This is an interface so that different client libraries can provide their own\n// implementation of the about data, e.g., with more platform-specific details.\n// The client library should call `setAboutClient` to set this data before sending\n// the `client-ready` message.\nexport interface AboutClientData {\n  library: string; // Library name, e.g., \"@pipecat-ai/client-js\"\n  library_version?: string; // Library version, e.g., \"1.0.0\"\n  platform?: string; // Platform name, e.g., \"Android\"\n  platform_version?: string; // Platform version, e.g., \"14.0\"\n  platform_details?: Record<string, NestedPlatformDetails>; // Optional platform details, e.g., browser info\n}\n\nexport type ClientReadyData = {\n  version: string;\n  about: AboutClientData; // Information about the client library\n};\n\nexport type ErrorData = {\n  message: string;\n  fatal: boolean;\n};\n\nexport type PipecatMetricData = {\n  processor: string;\n  value: number;\n};\n\nexport type PipecatMetricsData = {\n  processing?: PipecatMetricData[];\n  ttfb?: PipecatMetricData[];\n  characters?: PipecatMetricData[];\n};\n\nexport type TranscriptData = {\n  text: string;\n  final: boolean;\n  timestamp: string;\n  user_id: string;\n};\n\nexport type BotLLMTextData = {\n  text: string;\n};\n\nexport type BotTTSTextData = {\n  text: string;\n};\n\nexport type ServerMessageData = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  data: any;\n};\n\nexport type ClientMessageData = {\n  t: string;\n  d?: unknown;\n};\n\nexport type LLMSearchResult = {\n  text: string;\n  confidence: number[];\n};\n\nexport type BotLLMSearchResponseData = {\n  search_result?: string;\n  rendered_content?: string;\n  origins: LLMSearchOrigin[];\n};\n\nexport type LLMSearchOrigin = {\n  site_uri?: string;\n  site_title?: string;\n  results: LLMSearchResult[];\n};\n\nexport type LLMFunctionCallData = {\n  function_name: string;\n  tool_call_id: string;\n  args: Record<string, unknown>;\n};\n\nexport type LLMFunctionCallResult = Record<string, unknown> | string;\n\nexport type LLMFunctionCallResultResponse = {\n  function_name: string;\n  tool_call_id: string;\n  args: Record<string, unknown>;\n  result: LLMFunctionCallResult;\n};\n\nexport type SendTextOptions = {\n  run_immediately?: boolean;\n  audio_response?: boolean;\n};\n\n/** DEPRECATED */\nexport type LLMContextMessage = {\n  role: \"user\" | \"assistant\";\n  content: unknown;\n  run_immediately?: boolean;\n};\n\n/** DEPRECATED */\nexport type AppendToContextResultData = {\n  result: Record<string, unknown> | string;\n};\n\n// ----- Message Classes\n\nlet _aboutClient: AboutClientData | undefined;\nexport function setAboutClient(about: AboutClientData) {\n  // allow for partial updates to the about data\n  // this allows the client to set the about data at any time\n  // before sending the `client-ready` message and not worry about\n  // overwriting existing data\n  if (_aboutClient) {\n    _aboutClient = { ..._aboutClient, ...about };\n  } else {\n    // if no about data is set, set it to the provided value\n    _aboutClient = about;\n  }\n}\n\nexport class RTVIMessage {\n  id: string;\n  label: string = RTVI_MESSAGE_LABEL;\n  type: string;\n  data: unknown;\n\n  constructor(type: string, data: unknown, id?: string) {\n    this.type = type;\n    this.data = data;\n    this.id = id || uuidv4().slice(0, 8);\n  }\n\n  // Outbound message types\n  static clientReady(): RTVIMessage {\n    return new RTVIMessage(RTVIMessageType.CLIENT_READY, {\n      version: RTVI_PROTOCOL_VERSION,\n      about: _aboutClient || {\n        library: packageName,\n        library_version: packageVersion,\n      },\n    });\n  }\n\n  static disconnectBot(): RTVIMessage {\n    return new RTVIMessage(RTVIMessageType.DISCONNECT_BOT, {});\n  }\n\n  static error(message: string, fatal = false): RTVIMessage {\n    return new RTVIMessage(RTVIMessageType.ERROR, { message, fatal });\n  }\n}\n", "/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { BotAlreadyStartedError, BotNotReadyError } from \"../rtvi\";\nimport { PipecatClient } from \".\";\n\nexport function transportReady<T extends PipecatClient>(\n  _target: T,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n): PropertyDescriptor | void {\n  const originalMethod = descriptor.value;\n\n  descriptor.value = function (this: T, ...args: unknown[]) {\n    if (this.state === \"ready\") {\n      return originalMethod.apply(this, args);\n    } else {\n      throw new BotNotReadyError(\n        `Attempt to call ${propertyKey.toString()} when transport not in ready state. Await connect() first.`\n      );\n    }\n  };\n\n  return descriptor;\n}\n\nexport function transportAlreadyStarted<T extends PipecatClient>(\n  _target: T,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n): PropertyDescriptor | void {\n  const originalMethod = descriptor.value;\n\n  const states = [\"authenticating\", \"connecting\", \"connected\", \"ready\"];\n\n  descriptor.value = function (this: T, ...args: unknown[]) {\n    if (states.includes(this.state)) {\n      throw new BotAlreadyStartedError(\n        `Attempt to call ${propertyKey.toString()} when client already started. Please call disconnect() before starting again.`\n      );\n    } else {\n      return originalMethod.apply(this, args);\n    }\n  };\n\n  return descriptor;\n}\n\nexport function transportInState<T extends PipecatClient>(states: string[]) {\n  return function (\n    _target: T,\n    propertyKey: string | symbol,\n    descriptor: PropertyDescriptor\n  ): PropertyDescriptor | void {\n    const originalMethod = descriptor.value;\n\n    descriptor.get = function (this: T, ...args: unknown[]) {\n      if (states.includes(this.state)) {\n        return originalMethod.apply(this, args);\n      } else {\n        throw new BotNotReadyError(\n          `Attempt to call ${propertyKey.toString()} when transport not in ${states}.`\n        );\n      }\n    };\n\n    return descriptor;\n  };\n}\n\nexport function getIfTransportInState<T extends PipecatClient>(\n  ...states: string[]\n) {\n  states = [\"ready\", ...states];\n\n  return function (\n    _target: T,\n    propertyKey: string | symbol,\n    descriptor: PropertyDescriptor\n  ): PropertyDescriptor | void {\n    const originalGetter = descriptor.get;\n\n    descriptor.get = function (this: T) {\n      if (states.includes(this.state)) {\n        return originalGetter?.apply(this);\n      } else {\n        throw new BotNotReadyError(\n          `Attempt to call ${propertyKey.toString()} when transport not in ${states}. Await connect() first.`\n        );\n      }\n    };\n\n    return descriptor;\n  };\n}\n", "/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { ClientMessageData, RTVIMessage, RTVIMessageType } from \"../rtvi\";\nimport { logger } from \"./logger\";\n\ninterface QueuedRTVIMessage {\n  message: RTVIMessage;\n  timestamp: number;\n  timeout: number;\n  resolve: (value: unknown) => void;\n  reject: (reason?: unknown) => void;\n}\n\nexport class MessageDispatcher {\n  protected _sendMethod: (message: RTVIMessage) => void;\n  protected _queue = new Array<QueuedRTVIMessage>();\n  protected _gcInterval: ReturnType<typeof setInterval> | undefined = undefined;\n\n  constructor(sendMethod: (message: RTVIMessage) => void) {\n    this._queue = [];\n    this._sendMethod = sendMethod;\n  }\n\n  public disconnect() {\n    this.clearQueue();\n    clearInterval(this._gcInterval);\n    this._gcInterval = undefined;\n  }\n\n  public dispatch(\n    message_data: unknown,\n    type = RTVIMessageType.CLIENT_MESSAGE,\n    timeout = 10000\n  ): Promise<RTVIMessage> {\n    if (!this._gcInterval) {\n      // start garbage collection if not already running\n      this._gcInterval = setInterval(() => {\n        this._gc();\n      }, 2000); // Run garbage collection every 2 seconds\n    }\n\n    const message = new RTVIMessage(type, message_data);\n    const promise = new Promise((resolve, reject) => {\n      this._queue.push({\n        message,\n        timestamp: Date.now(),\n        timeout,\n        resolve,\n        reject,\n      });\n    });\n\n    logger.debug(\"[MessageDispatcher] dispatch\", message);\n\n    try {\n      this._sendMethod(message);\n    } catch (e) {\n      logger.error(\"[MessageDispatcher] Error sending message\", e);\n      return Promise.reject(e);\n    }\n\n    this._gc();\n\n    return promise as Promise<RTVIMessage>;\n  }\n\n  public clearQueue() {\n    this._queue = [];\n  }\n\n  private _resolveReject(\n    message: RTVIMessage,\n    resolve: boolean = true\n  ): RTVIMessage {\n    const queuedMessage = this._queue.find(\n      (msg) => msg.message.id === message.id\n    );\n\n    if (queuedMessage) {\n      if (resolve) {\n        logger.debug(\"[MessageDispatcher] Resolve\", message);\n        queuedMessage.resolve(message as RTVIMessage);\n      } else {\n        logger.debug(\"[MessageDispatcher] Reject\", message);\n        queuedMessage.reject(message as RTVIMessage);\n      }\n      // Remove message from queue\n      this._queue = this._queue.filter((msg) => msg.message.id !== message.id);\n      logger.debug(\"[MessageDispatcher] Queue\", this._queue);\n    }\n\n    return message;\n  }\n\n  public resolve(message: RTVIMessage): RTVIMessage {\n    return this._resolveReject(message, true);\n  }\n\n  public reject(message: RTVIMessage): RTVIMessage {\n    return this._resolveReject(message, false);\n  }\n\n  protected _gc() {\n    const expired: QueuedRTVIMessage[] = [];\n    this._queue = this._queue.filter((msg) => {\n      const isValid = Date.now() - msg.timestamp < msg.timeout;\n      if (!isValid) {\n        expired.push(msg);\n      }\n      return isValid;\n    });\n\n    expired.forEach((msg) => {\n      if (msg.message.type === RTVIMessageType.CLIENT_MESSAGE) {\n        msg.reject(\n          new RTVIMessage(RTVIMessageType.ERROR_RESPONSE, {\n            error: \"Timed out waiting for response\",\n            msgType: (msg.message.data as ClientMessageData).t,\n            data: (msg.message.data as ClientMessageData).d,\n            fatal: false,\n          })\n        );\n      }\n    });\n    logger.debug(\"[MessageDispatcher] GC\", this._queue);\n  }\n}\n", "/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nexport enum LogLevel {\n  NONE = 0,\n  ERROR = 1,\n  WARN = 2,\n  INFO = 3,\n  DEBUG = 4,\n}\n\nclass Logger {\n  private static instance: Logger;\n  private level: LogLevel = LogLevel.DEBUG;\n\n  private constructor() {}\n\n  static getInstance(): Logger {\n    if (!Logger.instance) {\n      Logger.instance = new Logger();\n    }\n    return Logger.instance;\n  }\n\n  setLevel(level: LogLevel) {\n    this.level = level;\n  }\n\n  debug(...args: unknown[]) {\n    if (this.level >= LogLevel.DEBUG) {\n      console.debug(...args);\n    }\n  }\n\n  info(...args: unknown[]) {\n    if (this.level >= LogLevel.INFO) {\n      console.info(...args);\n    }\n  }\n\n  warn(...args: unknown[]) {\n    if (this.level >= LogLevel.WARN) {\n      console.warn(...args);\n    }\n  }\n\n  error(...args: unknown[]) {\n    if (this.level >= LogLevel.ERROR) {\n      console.error(...args);\n    }\n  }\n}\n\nexport const logger = Logger.getInstance();\n\nexport type ILogger = Logger;\n", "import { logger } from \"./logger\";\n\ntype Serializable =\n  | string\n  | number\n  | boolean\n  | null\n  | Serializable[]\n  | { [key: number | string]: Serializable };\n\nexport interface APIRequest {\n  endpoint: string | URL | globalThis.Request;\n  headers?: Headers;\n  requestData?: Serializable;\n  timeout?: number;\n}\n\n/**\n * @deprecated Use APIRequest instead\n */\nexport type ConnectionEndpoint = APIRequest;\n\nexport function isAPIRequest(value: unknown): boolean {\n  if (\n    typeof value === \"object\" &&\n    value !== null &&\n    Object.keys(value).includes(\"endpoint\")\n  ) {\n    const endpoint = (value as APIRequest)[\"endpoint\"];\n    return (\n      typeof endpoint === \"string\" ||\n      endpoint instanceof URL ||\n      (typeof Request !== \"undefined\" && endpoint instanceof Request)\n    );\n  }\n  return false;\n}\n\nexport async function makeRequest(\n  cxnOpts: APIRequest,\n  abortController?: AbortController\n): Promise<unknown> {\n  if (!abortController) {\n    abortController = new AbortController();\n  }\n  let handshakeTimeout: ReturnType<typeof setTimeout> | undefined;\n\n  return new Promise((resolve, reject) => {\n    (async () => {\n      if (cxnOpts.timeout) {\n        handshakeTimeout = setTimeout(async () => {\n          abortController.abort();\n          reject(new Error(\"Timed out\"));\n        }, cxnOpts.timeout);\n      }\n\n      logger.debug(`[Pipecat Client] Fetching from ${cxnOpts.endpoint}`);\n      fetch(cxnOpts.endpoint, {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          ...Object.fromEntries((cxnOpts.headers ?? new Headers()).entries()),\n        }),\n        body: JSON.stringify(cxnOpts.requestData),\n        signal: abortController?.signal,\n      })\n        .then((res) => {\n          logger.debug(\n            `[Pipecat Client] Received response from ${cxnOpts.endpoint}`,\n            res\n          );\n          if (!res.ok) {\n            reject(res);\n          }\n          res.json().then((data) => resolve(data));\n        })\n        .catch((err) => {\n          logger.error(`[Pipecat Client] Error fetching: ${err}`);\n          reject(err);\n        })\n        .finally(() => {\n          if (handshakeTimeout) {\n            clearTimeout(handshakeTimeout);\n          }\n        });\n    })();\n  });\n}\n", "/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { RTVIError, RTVIMessage, TransportState } from \"../rtvi\";\nimport { PipecatClientOptions, RTVIEventCallbacks } from \"./client\";\n\nexport type Tracks = {\n  local: {\n    audio?: MediaStreamTrack;\n    video?: MediaStreamTrack;\n    screenAudio?: MediaStreamTrack;\n    screenVideo?: MediaStreamTrack;\n  };\n  bot?: {\n    audio?: MediaStreamTrack;\n    screenAudio?: undefined;\n    screenVideo?: undefined;\n    video?: MediaStreamTrack;\n  };\n};\n\nexport type TransportConnectionParams = unknown;\n\nexport abstract class Transport {\n  protected declare _options: PipecatClientOptions;\n  protected declare _onMessage: (ev: RTVIMessage) => void;\n  protected declare _callbacks: RTVIEventCallbacks;\n  protected declare _abortController: AbortController | undefined;\n  protected _state: TransportState = \"disconnected\";\n\n  constructor() {}\n\n  /** called from PipecatClient constructor to wire up callbacks */\n  abstract initialize(\n    options: PipecatClientOptions,\n    messageHandler: (ev: RTVIMessage) => void\n  ): void;\n\n  /**\n   * This method is intended to initialize cam/mic devices. It is wrapped\n   * by PipecatClient.initDevices and should not be called directly. It is also\n   * called as part of PipecatClient.connect if it has not already called.\n   */\n  abstract initDevices(): Promise<void>;\n\n  /**\n   * Establishes a connection with the remote server. This is the main entry\n   * point for the transport to start sending and receiving media and messages.\n   * This is called from PipecatClient.connect() and should not be called directly.\n   * @param connectParams - This type will ultimately be defned by the transport\n   * implementation. It is used to pass connection parameters to the transport.\n   */\n  connect(connectParams?: TransportConnectionParams): Promise<void> {\n    this._abortController = new AbortController();\n    let validatedParams = connectParams;\n    try {\n      validatedParams = this._validateConnectionParams(connectParams);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (e: any) {\n      throw new RTVIError(\n        `Invalid connection params: ${e.message}. Please check your connection params and try again.`\n      );\n    }\n    return this._connect(validatedParams);\n  }\n\n  abstract _validateConnectionParams(connectParams?: unknown): unknown;\n\n  abstract _connect(connectParams?: TransportConnectionParams): Promise<void>;\n  /**\n   * Disconnects the transport from the remote server. This is called from\n   * PipecatClient.disconnect() and should not be called directly.\n   */\n  disconnect(): Promise<void> {\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n    return this._disconnect();\n  }\n  abstract _disconnect(): Promise<void>;\n  abstract sendReadyMessage(): void;\n\n  abstract get state(): TransportState;\n  abstract set state(state: TransportState);\n\n  abstract getAllMics(): Promise<MediaDeviceInfo[]>;\n  abstract getAllCams(): Promise<MediaDeviceInfo[]>;\n  abstract getAllSpeakers(): Promise<MediaDeviceInfo[]>;\n\n  abstract updateMic(micId: string): void;\n  abstract updateCam(camId: string): void;\n  abstract updateSpeaker(speakerId: string): void;\n\n  abstract get selectedMic(): MediaDeviceInfo | Record<string, never>;\n  abstract get selectedCam(): MediaDeviceInfo | Record<string, never>;\n  abstract get selectedSpeaker(): MediaDeviceInfo | Record<string, never>;\n\n  abstract enableMic(enable: boolean): void;\n  abstract enableCam(enable: boolean): void;\n  abstract enableScreenShare(enable: boolean): void;\n  abstract get isCamEnabled(): boolean;\n  abstract get isMicEnabled(): boolean;\n  abstract get isSharingScreen(): boolean;\n\n  abstract sendMessage(message: RTVIMessage): void;\n\n  abstract tracks(): Tracks;\n}\n\nexport class TransportWrapper {\n  private _transport: Transport;\n  private _proxy: Transport;\n\n  constructor(transport: Transport) {\n    this._transport = transport;\n    this._proxy = new Proxy(this._transport, {\n      get: (target, prop, receiver) => {\n        if (typeof target[prop as keyof Transport] === \"function\") {\n          let errMsg;\n          switch (String(prop)) {\n            // Disable methods that modify the lifecycle of the call. These operations\n            // should be performed via the Pipecat client in order to keep state in sync.\n            case \"initialize\":\n              errMsg = `Direct calls to initialize() are disabled and used internally by the PipecatClient.`;\n              break;\n            case \"initDevices\":\n              errMsg = `Direct calls to initDevices() are disabled. Please use the PipecatClient.initDevices() wrapper or let PipecatClient.connect() call it for you.`;\n              break;\n            case \"sendReadyMessage\":\n              errMsg = `Direct calls to sendReadyMessage() are disabled and used internally by the PipecatClient.`;\n              break;\n            case \"connect\":\n              errMsg = `Direct calls to connect() are disabled. Please use the PipecatClient.connect() wrapper.`;\n              break;\n            case \"disconnect\":\n              errMsg = `Direct calls to disconnect() are disabled. Please use the PipecatClient.disconnect() wrapper.`;\n              break;\n          }\n          if (errMsg) {\n            return () => {\n              throw new Error(errMsg);\n            };\n          }\n          // Forward other method calls\n          return (...args: unknown[]) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n            return (target[prop as keyof Transport] as Function)(...args);\n          };\n        }\n        // Forward property access\n        return Reflect.get(target, prop, receiver);\n      },\n    });\n  }\n\n  get proxy(): Transport {\n    return this._proxy;\n  }\n}\n", "import Bowser from \"bowser\";\n\nimport {\n  name as packageName,\n  version as packageVersion,\n} from \"../package.json\";\nimport { AboutClientData } from \"../rtvi/messages\";\n\ninterface JSAboutClientData extends AboutClientData {\n  platform_details: {\n    browser?: string;\n    browser_version?: string;\n    platform_type?: string;\n    engine?: string;\n    device_memory?: number;\n    language?: string;\n    connection?: {\n      effectiveType?: string;\n      downlink?: number;\n    };\n  };\n}\n\nexport function learnAboutClient() {\n  let about: JSAboutClientData = {\n    library: packageName,\n    library_version: packageVersion,\n    platform_details: {},\n  };\n  // This uses legacy browser user agent parsing, which we still fall\n  // back to if the User Agent Hints API is not available\n  let navAgentInfo = null;\n  if (window?.navigator?.userAgent) {\n    try {\n      navAgentInfo = Bowser.parse(window.navigator.userAgent);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (_) {\n      // void\n    }\n  }\n\n  if (navAgentInfo?.browser?.name) {\n    about.platform_details.browser = navAgentInfo.browser.name;\n  }\n  if (\n    navAgentInfo?.browser?.name === \"Safari\" &&\n    !navAgentInfo.browser.version\n  ) {\n    about.platform_details.browser_version = \"Web View\";\n  } else if (navAgentInfo?.browser?.version) {\n    about.platform_details.browser_version = navAgentInfo.browser.version;\n  }\n\n  if (navAgentInfo?.platform?.type) {\n    about.platform_details.platform_type = navAgentInfo.platform.type;\n  }\n\n  if (navAgentInfo?.engine?.name) {\n    about.platform_details.engine = navAgentInfo.engine.name;\n  }\n\n  if (navAgentInfo?.os) {\n    about.platform = navAgentInfo.os.name;\n    about.platform_version = navAgentInfo.os.version;\n  }\n  return about;\n}\n"],
  "mappings": "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",
  "names": ["ReflectApply", "ReflectOwnKeys", "NumberIsNaN", "once", "URL", "$gH2WJ$events"]
}
