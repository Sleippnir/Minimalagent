services:
  # Backend API Server
  api:
    build: .
    ports:
      - "8001:8001"  # API server
      - "7861:7861"  # WebRTC bot (when launched)
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - DEEPGRAM_API_KEY=${DEEPGRAM_API_KEY}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - ELEVENLABS_VOICE_ID=${ELEVENLABS_VOICE_ID}
      - SIMLI_API_KEY=${SIMLI_API_KEY}
      - SIMLI_FACE_ID=${SIMLI_FACE_ID}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - AUTH_TOKEN=${AUTH_TOKEN}
    volumes:
      - ./storage:/app/storage  # Mount storage directory for transcripts
      - ./scripts:/app/scripts  # Mount scripts directory for maintenance
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Background Evaluator Service
  background-evaluator:
    build: .
    command: python -m interview.evaluator.background_evaluator
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_ANON_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - DEEPGRAM_API_KEY=${DEEPGRAM_API_KEY}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - SIMLI_API_KEY=${SIMLI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
    volumes:
      - ./storage:/app/storage  # Mount storage directory
    depends_on:
      - api
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -v grep | grep background_evaluator || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Content Maintenance Service (runs daily)
  content-maintenance:
    build: .
    command: sh -c "while true; do python scripts/maintain_content.py; sleep 86400; done"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_ANON_KEY}
    volumes:
      - ./scripts:/app/scripts  # Mount scripts directory
    depends_on:
      - api
    restart: unless-stopped
    profiles:
      - maintenance  # Only run when explicitly requested

  # Frontend Test Interface
  frontend:
    image: nginx:alpine
    ports:
      - "8080:80"  # Frontend on port 8080
    volumes:
      - ./frontend/dist:/usr/share/nginx/html  # Mount built frontend files
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf  # Custom nginx config
    depends_on:
      - api
    restart: unless-stopped